NAME,DECLARATION,DESCRIPTION
~UDatasmithClothAssetFactory,virtual ~UDatasmithClothAssetFactory() = default;,The experimental Cloth importer is no longer supported.
~UDatasmithClothComponentFactory,virtual ~UDatasmithClothComponentFactory() = default;,The experimental Cloth importer is no longer supported.
AcquireThreadOwnership,FORCEINLINE void AcquireThreadOwnership(),"FRHICommandListImmediate::AcquireThreadOwnership() is deprecated. Thread ownership of the RHI is automatic, so this function is redundant."
Actions,TArray< TSharedPtr<FEdGraphSchemaAction> > const Actions;,"!! WARNING: This array is no longer populated!! FGraphActionNode::Actions array only functioned with a single Action (GetPrimaryAction), access via Action"
ActivateEditorMode,virtual void ActivateEditorMode() {},This method is deprecated.
Add,inline int32 Add(),Renamed to AddUinitialized() to match TArray API
AddAction,"ENGINE_API virtual void AddAction(const TSharedPtr<FEdGraphSchemaAction>& NewAction, FString const& Category);","Overriding the schema action category is no longer supported, set the category via CosmeticUpdateRootCategory or CosmeticUpdateCategory"
AddAction,"ENGINE_API virtual void AddAction(const TSharedPtr<FEdGraphSchemaAction>& NewAction, FString const& Category) override;","Overriding the schema action category is no longer supported, specify category via FCategorizedGraphActionListBuilder constructor, or on the FEdGraphSchemaAction"
AddActionList,"ENGINE_API virtual void AddActionList( const TArray<TSharedPtr<FEdGraphSchemaAction> >& NewActions, FString const& Category = FString() );",Collections of Action lists were ambiguous and unused - make a compound FEdGraphSchemaAction and Add it
AddActionList,"ENGINE_API virtual void AddActionList(const TArray<TSharedPtr<FEdGraphSchemaAction> >& NewActions, FString const& Category = FString()) override;",Collections of Action lists were ambiguous and unused - make a compound FEdGraphSchemaAction and Add it
AddArea,"NAVIGATIONSYSTEM_API void AddArea(const FBox& NewArea, const int32 Flags, const TFunction<UObject*()>& ObjectProviderFunc = nullptr,",Use the version taking ENavigationDirtyFlag and FNavigationElement instead.
AddAreas,"NAVIGATIONSYSTEM_API void AddAreas(const TConstArrayView<FBox> NewAreas, const int32 Flags, const TFunction<UObject*()>& ObjectProviderFunc = nullptr,",Use the version taking ENavigationDirtyFlag and FNavigationElement instead.
AddCell,"void AddCell(const UWorldPartitionRuntimeCell* Cell, const FWorldPartitionStreamingSource& Source, const FSphericalSector& SourceShape) {}",Use version that takes FWorldPartitionStreamingContext instead.
AddChild,TSharedPtr<FGraphActionNode> AddChild(FGraphActionListBuilderBase::ActionGroup const& ActionSet);,"FGraphActionListBuilderBase::ActionGroup has been deprecated, use TSharedPtr<FEdGraphSchemaAction> directly"
AddChildAlphabetical,TSharedPtr<FGraphActionNode> AddChildAlphabetical(FGraphActionListBuilderBase::ActionGroup const& ActionSet);,"FGraphActionListBuilderBase::ActionGroup has been deprecated, use TSharedPtr<FEdGraphSchemaAction> directly"
AddCloth,virtual void AddCloth(const TSharedPtr< IDatasmithClothElement >& InElement) override;,The experimental Cloth importer is no longer supported.
AddCloth,virtual void AddCloth(const TSharedPtr< IDatasmithClothElement >& InElement) = 0;,The experimental Cloth importer is no longer supported.
AddDecoder,virtual void AddDecoder(ICompressedAudioInfo* CompressedAudioInfo) { LogWarning(); },Use These methods are no longer used (removing the unused legacy streaming manager)
AddDirtyArea,"NAVIGATIONSYSTEM_API void AddDirtyArea(const FBox& NewArea, int32 Flags, const FName& DebugReason = NAME_None);",Use the version taking ENavigationDirtyFlag instead.
AddDirtyArea,"NAVIGATIONSYSTEM_API void AddDirtyArea(const FBox& NewArea, int32 Flags, const TFunction<UObject*()>& ObjectProviderFunc, const FName& DebugReason = NAME_None);",Use the version taking ENavigationDirtyFlag instead.
AddDirtyAreas,"NAVIGATIONSYSTEM_API void AddDirtyAreas(const TArray<FBox>& NewAreas, int32 Flags, const FName& DebugReason = NAME_None);",Use the version taking ENavigationDirtyFlag instead.
AddGenericPackageToGenerate,"virtual const FWorldPartitionCookPackage* AddGenericPackageToGenerate(IWorldPartitionCookPackageGenerator* Generator, const FString& Root, const FString& RelativePath) { return nullptr; }",Use AddPackageToGenerate instead.
AddLevelStreamingPackageToGenerate,"virtual const FWorldPartitionCookPackage* AddLevelStreamingPackageToGenerate(IWorldPartitionCookPackageGenerator* Generator, const FString& Root, const FString& RelativePath) { return nullptr; }",Use AddPackageToGenerate instead.
AddNode,"NAVIGATIONSYSTEM_API void AddNode(UObject* ElementOb, INavRelevantInterface* NavElement, const FBox& Bounds, FNavigationOctreeElement& Data);",Use the overloaded version with only FBox and FNavigationOctreeElement instead.
AddNonWarpingLevel,void AddNonWarpingLevel(),This function is no longer used. Please update your code to use time-based breadcrumbs instead.
AddPermissionList,"void AddPermissionList(TSoftObjectPtr<const UStruct> Struct, const FNamePermissionList& PermissionList, const EPropertyPermissionListRules Rules = EPropertyPermissionListRules::UseExistingPermissionList);",Call AddPermissionList with additional required arguments instead.
AddPin,virtual UE::Dataflow::FPin AddPin() { return UE::Dataflow::FPin::InvalidPin; },Use AddPins method instead
AddRange,"void AddRange(const TRange<FFrameNumber>& RootSpaceRange, FMovieSceneSequenceIDRef InSequenceID, ESectionEvaluationFlags InFlags, FMovieSceneWarpCounter RootToSequenceWarpCounter);",The RootToSequenceWarpCounter parameter is no longer required or supported
AddRasterizeToRectsPass,static inline void AddRasterizeToRectsPass(,Use the other prototype of AddRasterizeToRectsPass that takes a ERDGPassFlags in parameter and use ERDGPassFlags::SkipRenderPass in lieu of bSkipRenderPass == true
AddSaveOverride,"void AddSaveOverride(UObject* Target, FObjectSaveOverride InOverride)",Calling AddSaveOverride in UObject::PreSave is deprecated. Override UObject::CollectSaveOverrides and call AddSaveOverride on its context instead.
AddStreamingSoundSource,virtual void AddStreamingSoundSource(FSoundSource* SoundSource) { LogWarning(); },Use These methods are no longer used (removing the unused legacy streaming manager)
AddStreamingSoundWave,virtual void AddStreamingSoundWave(const FSoundWaveProxyPtr& SoundWave) { LogWarning(); },Use These methods are no longer used (removing the unused legacy streaming manager)
AddThreadedShaderPipelineRequest,ENGINE_API void AddThreadedShaderPipelineRequest(,RequestShaderIds is needed for AddThreadedShaderPipelineRequest and need to match the ones from FMaterialShaderMap::GetShaderList
AddTorque,"CHAOS_API void AddTorque(TArrayView<const FPhysicsObjectHandle> InObjects, const FVector& Torque, bool bInvalidate);",This version of AddTorque has been deprecated. Please use the version with @param bAccelChange
AddUniformBufferIncludesToEnvironment,"inline void AddUniformBufferIncludesToEnvironment(FShaderCompilerEnvironment& OutEnvironment, const TSet<const TCHAR*, TStringPointerSetKeyFuncs_DEPRECATED<const TCHAR*>>& InUniformBufferNames) {}",AddUniformBufferIncludesToEnviroment now takes a set of FShaderParametersMetadata pointers
AddWarpingLevel,void AddWarpingLevel(uint32 WarpCount),This function is no longer used. Please update your code to use time-based breadcrumbs instead.
AllocatePermanentObjectPool,COREUOBJECT_API void AllocatePermanentObjectPool(int32 InPermanentObjectPoolSize) {},Permanent Object Pool is handled by the global instance of FLinearAllocator now
AngleIsBuckled,"bool AngleIsBuckled(const FSolverReal Angle, const FSolverReal RestAngle) const",This version is deprecated and will produce the incorrect result if BucklingRatio is weighted. Use version that takes a ConstraintIndex instead.
AppendExportBunches,ENGINE_API virtual void AppendExportBunches( TArray< FOutBunch* >& OutExportBunches ) override;,Use GetAdditionalRequiredBunches
AppendExportBunches,ENGINE_API virtual void AppendExportBunches(TArray< FOutBunch* >& OutExportBunches);,Use GetAdditionalRequiredBunches
AppendExportBunches,ENGINE_API void AppendExportBunches(TArray<FOutBunch *>& OutgoingBunches);,Use GetAdditionalRequiredBunches
AppendStaticParametersString,void AppendStaticParametersString(FString& ParamsString) const;,"Internal function only, called through AppendKeyString."
AppendStreamingSourceInfo,"inline void AppendStreamingSourceInfo(const FWorldPartitionStreamingSource& Source, const FSphericalSector& SourceShape) {}",Use version that takes FWorldPartitionStreamingContext instead.
AppendStreamingSourceInfo,"ENGINE_API virtual void AppendStreamingSourceInfo(const FWorldPartitionStreamingSource& Source, const FSphericalSector& SourceShape) const {}",Use version that takes FWorldPartitionStreamingContext instead.
AppendToNode,"NAVIGATIONSYSTEM_API void AppendToNode(const FOctreeElementId2& Id, INavRelevantInterface* NavElement, const FBox& Bounds, FNavigationOctreeElement& Data);",Use the overloaded version with FNavigationElement instead.
ApplyColorConversion,"bool ApplyColorConversion(FTextureRHIRef& InSrcTexture, FTextureRHIRef& InDstTexture)",The overload of IMediaTextureSampleColorConverter::ApplyColorConversion which does not take an RHI command list is deprecated.
AreDataStorageInterfacesSet,TYPEDELEMENTFRAMEWORK_API bool AreDataStorageInterfacesSet() const;,Use UE::Editor::DataStorage::AreDataStorageInterfacesSet instead.
AreNormalsAndTangentsValid,"static void AreNormalsAndTangentsValid(const FMeshDescription& MeshDescription, bool& bHasInvalidNormals, bool& bHasInvalidTangents)",Use HasInvalidVertexInstanceNormalsOrTangents
ArrayUnderflowClamp,SIGNALPROCESSING_API void ArrayUnderflowClamp(TArrayView<float> InOutBuffer);,Audio code relies on denormals flush to zero floating point mode from now on. Please use FScopedFTZFloatMode instead of this API
AsLegacyLinearTimeTransform,MOVIESCENE_API FMovieSceneTimeTransform AsLegacyLinearTimeTransform() const;,This function is no longer supported. Please use FMovieSceneInverseSequenceTransform directly.
AttachLinker,COREUOBJECT_API void AttachLinker(FLinkerLoad* InLinker);,AttachLinker is not necessary. Remove calls to it.
AttachToLinker,void AttachToLinker(UMovieSceneEntitySystemLinker* InLinker) {},"Runners are now owned by linkers, and always attached"
authenticatio,"int32			ResponseId;				// Id assigned by the server for linking responses to connections upon authentication",Variable is deprecated and unassigned
bAdvancedMode,bool bAdvancedMode;,Use Get/SetAdvancedMode()
BakeToSkelMeshToCallbacks,"static bool BakeToSkelMeshToCallbacks(UMovieScene* MovieScene, IMovieScenePlayer* Player,",BakeToSkelMeshToCallbacks taking movie scene has been deprecated in favor of a new function that takes current and root movie scene sequences
BaseInstancePrefixSum,TArray<uint32> BaseInstancePrefixSum;,Providing BaseInstancePrefixSum is no longer necessary.
BBoxGrowth,FVector BBoxGrowth;,Use BBoxGrowthLow and BBoxGrowthHigh instead.
bDisableBugIt,bool bDisableBugIt;,Use Get/SetDisableBugIt()
bDisablePIE,bool bDisablePIE;,Use Get/SetDisablePIE()
Begin,"virtual void Begin(IMovieScenePlayer* Player, const UE::MovieScene::FEvaluationHookParams& Params) const {}",Please implement the version that takes a SharedPlaybackState
BeginFrame,void BeginFrame() {},FRHICommandListImmediate::BeginFrame() is deprecated and is no longer necessary. Remove any remaining calls to BeginFrame(). There is no replacement.
BeginScene,void BeginScene() {},FRHICommandListImmediate::BeginScene() is deprecated and is no longer necessary. Remove any remaining calls to BeginScene(). There is no replacement.
BindStreamSource,"virtual void BindStreamSource(class FRHICommandList& RHICmdList, int32 StreamIndex, uint32 InstanceOffset) {}",Use GetStreamSource instead
bIsConstFunc:1,uint32 bIsConstFunc:1;,bIsConstFunc is deprecated. Check for FUNC_Const on FunctionReference.ResolveMember<UFunction>() instead.
bIsDisabled,static CORE_API bool bIsDisabled;,Use IsEnabled instead.
bIsInterfaceCall:1,uint32 bIsInterfaceCall:1;,bIsInterfaceCall is deprecated. Check for CLASS_Interface on FunctionReference.GetMemberParentClass() instead.
bIsPureFunc:1,uint32 bIsPureFunc:1;,bIsPureFunc is deprecated. Use bDefaultsToPureFunc or IsNodePure instead.
bool,explicit operator bool() const,Use IsExpired() instead.
BroadcastEnumPostStateChange,UMG_API void BroadcastEnumPostStateChange(const FWidgetStateBitfield& StateChange);,FWidgetStateBitfield currently no longer supports enum states
bStopMovementAbortPaths_DEPRECATED:1,uint8 bStopMovementAbortPaths_DEPRECATED:1;,"bStopMovementAbortPaths is deprecated, please use NavMovementProperties.bStopMovementAbortPaths instead."
BucklingRatio,FSolverReal BucklingRatio;,Scalar Buckling Ratio has been deprecated. Use BucklingRatioWeighted instead.
Buffer,FSoundBuffer* Buffer;,This is no longer used and should not be accessed directly.
BufferCommand,"CHAOS_API void BufferCommand(Chaos::FPBDRigidsSolver* RigidsSolver, const FFieldSystemCommand& Command);",Use BufferFieldCommand_Internal instead when calling on the physics thread or the _external version when calling on the gamethread
Buffers,"TArray<FSoundBuffer*>			Buffers;",This is no longer used and should not be accessed directly.
Build,virtual bool Build(,Use FStaticMeshBuildParameters instead.
Build,"virtual bool Build(FStaticMeshRenderData& OutRenderData, UStaticMesh* StaticMesh, const FStaticMeshLODGroup& LODGroup, bool bAllowNanite) override",Use FStaticMeshBuildParameters instead.
Build,virtual bool Build(,Use FStaticMeshBuildParameters instead.
BuildCompactHeightField,"NAVIGATIONSYSTEM_API bool BuildCompactHeightField(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext);",Use the new version without RasterContext instead.
BuildMesh,"virtual bool BuildMesh(class FStaticMeshRenderData& OutRenderData, class UObject* Mesh, const class FStaticMeshLODGroup& LODGroup, bool bAllowNanite) = 0;",Use FStaticMeshBuildParameters instead.
BuildRayTracingInstanceBuffer,inline void BuildRayTracingInstanceBuffer(,GPUInstances no longer supported. Use GPUSceneInstances instead.
BusyWait,"inline void BusyWait(const TaskType& Task, bool ForceAllowBackgroundWork = false);",This method will be removed.
BusyWait,"inline void BusyWait(const TArrayView<const TaskType>& Tasks, bool ForceAllowBackgroundWork = false);",This method will be removed.
BusyWait,"bool BusyWait(const TaskCollectionType& Tasks, FTimespan InTimeout = FTimespan::MaxValue());",Use Wait instead.
BusyWait,bool BusyWait(FTimespan Timeout = FTimespan::MaxValue()) const,Use Wait instead.
BusyWait,bool BusyWait(ConditionType&& Condition) const,This method will be removed.
BusyWait,"bool BusyWait(const TaskCollectionType& Tasks, FTimespan InTimeout/* = FTimespan::MaxValue()*/)",Use Wait instead.
BusyWait,bool BusyWait(FTimeout Timeout),Use Wait instead
BusyWait,bool BusyWait(ConditionType&& Condition),This method will be removed.
BusyWaitForTask,"FORCEINLINE_DEBUGGABLE void BusyWaitForTask(const FTask& Task, bool ForceAllowBackgroundWork = false)",This method will be removed.
BusyWaitForTasks,"FORCEINLINE_DEBUGGABLE void BusyWaitForTasks(const TArrayView<const TaskType>& Tasks, bool ForceAllowBackgroundWork = false)",This method will be removed.
BusyWaitUntil,"inline void BusyWaitUntil(Conditional&& Cond, bool ForceAllowBackgroundWork = false);",This method will be removed.
BusyWaitUntil,"FORCEINLINE_DEBUGGABLE void BusyWaitUntil(Conditional&& Cond, bool ForceAllowBackgroundWork = false)",This method will be removed.
Bypass,RHI_API static bool Bypass();,"Don't call Bypass() on an FRHIResource. Use the Bypass() function on an FRHICommandList instance, or the FRHICommmandListExecutor."
CacheBeginTime,float CacheBeginTime;,No longer used
CacheType,EGeometryCollectionCacheType CacheType;,No longer used
CalcRayTracingGeometrySize,FORCEINLINE FRayTracingAccelerationStructureSize CalcRayTracingGeometrySize(const FRayTracingGeometryInitializer& Initializer),Use the global scope RHICalcRayTracingGeometrySize function instead.
CalculateLocalPixelToWorldScale,INTERACTIVETOOLSFRAMEWORK_API float CalculateLocalPixelToWorldScale(,This function was moved to the UE::GizmoRenderingUtil namespace.
CalculateLocalPixelToWorldScale,INTERACTIVETOOLSFRAMEWORK_API float CalculateLocalPixelToWorldScale(,This function was moved to the UE::GizmoRenderingUtil namespace.
CalculateViewDependentScaleAndFlatten,INTERACTIVETOOLSFRAMEWORK_API float CalculateViewDependentScaleAndFlatten(,This function was moved to the UE::GizmoRenderingUtil namespace.
CanConstructPropertyUpdatedWidgetBuilder,PROPERTYEDITOR_API virtual bool CanConstructPropertyUpdatedWidgetBuilder() const;,Experimental API
CanCreateSoundSource,virtual bool CanCreateSoundSource(const FWaveInstance* WaveInstance) const { LogWarning(); return false; },Use These methods are no longer used (removing the unused legacy streaming manager)
CanSkipEditorReferencedPackagesWhenCooking,inline bool CanSkipEditorReferencedPackagesWhenCooking() { return false; },No longer used; skiponlyeditoronly is used instead and tracks editoronly references via savepackage results.
ClearEnumState,UMG_API void ClearEnumState(const FWidgetStateBitfield& EnumStateBitfield);,FWidgetStateBitfield currently no longer supports enum states
ClearEnumState,UMG_API void ClearEnumState(uint8 EnumStateIndex);,FWidgetStateBitfield currently no longer supports enum states
ClearEnumState,UMG_API void ClearEnumState(FName EnumStateName);,FWidgetStateBitfield currently no longer supports enum states
ClearRayTracingBindings,FORCEINLINE_DEBUGGABLE void ClearRayTracingBindings(FRHIRayTracingScene* Scene),Use FRHIShaderBindingTable instead.
ClearUnreachable,FORCEINLINE void ClearUnreachable(),ClearUnreachable() can only be used by the garbage collector.
Clothes,TDatasmithReferenceArrayProxy<IDatasmithClothElement>            Clothes;,The experimental Cloth importer is no longer supported.
CollectSearchTextWeightInfo,"ENGINE_API int32 CollectSearchTextWeightInfo(const FGraphActionListBuilderBase::ActionGroup& InCurrentAction, const FGraphSchemaSearchWeightModifiers& InWeightModifiers,","FGraphActionListBuilderBase::ActionGroup weight calculation was always performed on the first action, provide that if scoring a FGraphActionListBuilderBase::ActionGroup, or just provide the FEdGraphSchemaAction"
Commit,"ENGINE_API void Commit(FRHICommandList& RHICmdList, FRHIBuffer* ScratchBuffer);",This function has been deprecated. Use the version that takes GraphBuilder as input.
CommitRayTracingBindings,FORCEINLINE_DEBUGGABLE void CommitRayTracingBindings(FRHIRayTracingScene* Scene),Use FRHIShaderBindingTable instead.
CompileOfflineMali,"extern SHADERCOMPILERCOMMON_API void CompileOfflineMali(const FShaderCompilerInput &Input, FShaderCompilerOutput& ShaderOutput, const ANSICHAR* ShaderSource, const int32 SourceSize, bool bVulkanSpirV, const ANSICHAR* VulkanSpirVEntryPoint = nullptr);",CompileOfflineMali is no longer used; CompileShaderOffline is used instead to support different compilers instead of Mali itself.
Compress,"virtual bool Compress(void* CompressedBuffer, int32& CompressedSize, const void* UncompressedBuffer, int32 UncompressedSize, int32 CompressionData, ECompressionFlags Flags) { return false; };",Switch to 64 bit version for memory sizes
CompressRawAnimSequenceTrack,"ENGINE_API bool CompressRawAnimSequenceTrack(FRawAnimSequenceTrack& RawTrack, int32 NumberOfKeys, FName ErrorName, float MaxPosDiff, float MaxAngleDiff);",CompressRawAnimSequenceTrack requires the MaxScaleDiff argument
ComputeScratchBufferSize,RENDERER_API uint32 ComputeScratchBufferSize();,Use AddDynamicGeometryUpdatePass instead which allocates scratch buffer internally.
ConditionalPreprocessShader,extern RENDERCORE_API bool ConditionalPreprocessShader(FShaderCommonCompileJob* Job);,"ConditionalPreprocessShader is now just PreprocessShader (no longer conditional, always executes in the main process at job submission time)"
ConstructPropertyUpdatedWidgetBuilder,PROPERTYEDITOR_API virtual TSharedPtr<FPropertyUpdatedWidgetBuilder> ConstructPropertyUpdatedWidgetBuilder(const FConstructPropertyUpdatedWidgetBuilderArgs& Args);,Experimental API
ContainsDefinition,RENDERCORE_API bool ContainsDefinition(FName Name) const;,ContainsDefinition will be made private in the future and should not be called by downstream code.
Convert,"bool Convert(FTextureRHIRef& InDstTexture, const FConversionHints& Hints)",The overload of IMediaTextureSampleConverter::Convert which does not take an RHI command list is deprecated.
ConvertActors,"UNREALED_API void ConvertActors( const TArray<AActor*>& ActorsToConvert, UClass* ConvertToClass, const TSet<FString>& ComponentsToConsider, bool bUseSpecialCases = false );",Please use UEditorActorSubsystem::ConvertActors instead.
ConvertActorsFromClass,"UNREALED_API void ConvertActorsFromClass( UClass* FromClass, UClass* ToClass );",Please use UEditorActorSubsystem::ConvertActorsFromClass instead.
ConvertBrushesToStaticMesh,"UNREALED_API AActor* ConvertBrushesToStaticMesh(const FString& InStaticMeshPackageName, TArray<ABrush*>& InBrushesToConvert, const FVector& InPivotLocation);",Please use UEditorActorSubsystem::ConvertBrushesToStaticMesh instead.
ConvertLightActors,UNREALED_API void ConvertLightActors( UClass* ConvertToClass );,Please use UEditorActorSubsystem::ConvertLightActors instead.
ConvertQualtiyLevelData,"TMap<int32, _ValueType> ConvertQualtiyLevelData(const TMap<EPerQualityLevels, _ValueType>& Data)",Use ConvertQualityLevelData.
ConvertQualtiyLevelData,"TMap<EPerQualityLevels, _ValueType> ConvertQualtiyLevelData(const TMap<int32, _ValueType>& Data)",Use ConvertQualityLevelData.
ConvertQualtiyLevelData,"void ConvertQualtiyLevelData(TMap<FName, _ValueType>& PlatformData, TMultiMap<FName, FName>& PerPlatformToQualityLevel, _ValueType Default)",Use ConvertQualityLevelData
ConvertSelectedBrushesToVolumes,UNREALED_API void ConvertSelectedBrushesToVolumes( UClass* VolumeClass );,Please use UEditorActorSubsystem::ConvertSelectedBrushesToVolumes instead.
CookByTheBookFinished,static COREUOBJECT_API FCookInfoEvent CookByTheBookFinished;,"Use CookFinished, possibly restricting to the case CookInfo.GetCookType() == ECookType::ByTheBook."
CookByTheBookStarted,static COREUOBJECT_API FCookInfoEvent CookByTheBookStarted;,"Use CookStarted, possibly restricting to the case CookInfo.GetCookType() == ECookType::ByTheBook."
CopyBuffer,"FORCEINLINE void CopyBuffer(FRHIBuffer* SourceBuffer, FRHIBuffer* DestBuffer)",CopyBuffer is deprecated. Use CopyBufferRegion.
CreateCloth,static TSharedRef< IDatasmithClothElement > CreateCloth( const TCHAR* InName );,The experimental Cloth importer is no longer supported.
CreateClothActor,static TSharedRef< IDatasmithClothActorElement > CreateClothActor(const TCHAR* InName);,The experimental Cloth importer is no longer supported.
CreateClothAsset,"virtual UObject* CreateClothAsset(UObject* Outer, const FName& Name, EObjectFlags Flags) const",The experimental Cloth importer is no longer supported.
CreateClothComponent,virtual USceneComponent* CreateClothComponent(UObject* Outer) const,The experimental Cloth importer is no longer supported.
CreateCurveEditorModelDeprecatedSignature,void CreateCurveEditorModelDeprecatedSignature(),"CreateCurveEditorModel(const TMovieSceneChannelHandle<T>&, UMovieSceneSection*, TSharedRef<ISequencer>) has been deprecated. Please update your signature to use FCreateCurveEditorModelParams"
CreateHeightField,"NAVIGATIONSYSTEM_API bool CreateHeightField(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext);",Use the new version without RasterContext instead.
CreateKeyEditorDeprecatedSignature,void CreateKeyEditorDeprecatedSignature(),"CreateKeyEditor(const TMovieSceneChannelHandle<T>&, UMovieSceneSection*, const FGuid&, TWeakPtr<FTrackInstancePropertyBindings>, TWeakPtr<ISequencer>); has been deprecated. Please update your signature to use FCreateKeyEditorParams"
CreateLayerEditorSettingsFor,LANDSCAPE_API void CreateLayerEditorSettingsFor(ULandscapeLayerInfoObject* LayerInfo) {},"This property has been deprecated, please use the CreateTargetLayerSettingsFor instead"
CreateLayerFrom,LANDSCAPE_API int32 CreateLayerFrom(const FLandscapeLayer& InLayer);,Use DuplicateLayerAndMoveBrushes
CreateNavigationSystem,static NAVIGATIONSYSTEM_API UNavigationSystemV1* CreateNavigationSystem(UWorld* WorldOwner);,This creation flow is deprecation. Use FNavigationSystem::AddNavigationSystemToWorld instead.
CreateRayTracingSceneWithGeometryInstances,RENDERER_API FRayTracingSceneWithGeometryInstances CreateRayTracingSceneWithGeometryInstances(,Use FRHIShaderBindingTable instead.
CreateShaderArchive,"virtual bool CreateShaderArchive(FString const& LibraryName,",Use version accepting a TArray of FSharedBuffer code buffers.
CreateSubsurfaceProfileParameterName,ENGINE_API FName CreateSubsurfaceProfileParameterName(const USubsurfaceProfile* InProfile);,"Please, use the name space SubsurfaceProfile::"
CreateTargetShaderFormatsPropertyView,"void CreateTargetShaderFormatsPropertyView(ITargetPlatform* TargetPlatform, GetFriendlyNameFromRHINameFnc* FriendlyNameFnc, FilterShaderPlatformFnc* FilterShaderPlatformFunc = nullptr, ECategoryPriority::Type InPriority = ECategoryPriority::Default);",CreateTargetShaderFormatsPropertyView now takes a ITargetPlatformSettings* as first argument instead of ITargetPlatform*. Please change your callback function as this is a breaking change.
CreateWorldBrowserHierarchy,virtual TSharedRef<SWidget> CreateWorldBrowserHierarchy();,Use CreateWorldBrowserHierarchyWidget instead.
CustomizeChildren,"virtual	void CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils) {}",This method is mo longer used. Please use MakeEditUI to create your editor display within a popup window per-fragment
Data,FGenericMemoryStatsMap Data;,Using Data directly is deprecated and will be made private. Use methods on FGenericMemoryStats directly.
DeactivateEditorMode,virtual void DeactivateEditorMode() {},This method is deprecated.
DebugName,FString DebugName;,Please use the DebugFName instead
DebugVerifySkeletalMeshLOD,ENGINE_API void DebugVerifySkeletalMeshLOD();,Use GetLODInfo()->ScreenSize to manually verify a LOD's screen size settings.
DECLARE_DELEGATE_OneParam,"DECLARE_DELEGATE_OneParam(FOnNavRelevantObjectRegistrationEvent, INavRelevantInterface&);",Use the overloaded version with FNavigationElement instead.
DECLARE_DELEGATE_RetVal_OneParam,"DECLARE_DELEGATE_RetVal_OneParam(bool, FOnGetCurrentVector4Value, FVector4&)",Color grading widgets and associated types have moved to the AdvancedWidgets module.
DECLARE_DELEGATE_TwoParams,"DECLARE_DELEGATE_TwoParams(FNavRelevantGeometryExportDelegate, INavRelevantInterface&, FNavigationRelevantData&);",Use FGeometryExportDelegate.
DECLARE_MULTICAST_DELEGATE_OneParam,"DECLARE_MULTICAST_DELEGATE_OneParam(FOnAssetsAddExtraObjectsToDelete, TArray<UObject*>&);","FOnAssetsAddExtraObjectsToDelete has been deprecated, please use FOnAddExtraObjectsToDelete instead"
DecompressShader,"RENDERCORE_API void DecompressShader(int32 Index, const TArray<TArray<uint8>>& ShaderCode, TArray<uint8>& OutDecompressedShader) const",Use overload accepting a TArray<FSharedBuffer> for shader code
DemandChildLazyDataGathering,"NAVIGATIONSYSTEM_API void DemandChildLazyDataGathering(FNavigationRelevantData& ElementData, INavRelevantInterface& ChildNavInterface);",Use the overloaded version with FNavigationElement instead.
DestroySpawnedObject,virtual void DestroySpawnedObject(UObject& Object) {},Please use the version of this with CustomSpawnableBinding
DetachFromLinker,void DetachFromLinker() {},"Runners are now owned by linkers, and always attached"
DetachFromLinkers,COREUOBJECT_API void DetachFromLinkers();,DetachFromLinkers is not necessary. Remove calls to it.
DetachLinker,COREUOBJECT_API void DetachLinker(FLinkerLoad* InLinker);,DetachLinker is not necessary. Remove calls to it.
DisableLevelInstanceSupport,void DisableLevelInstanceSupport() { bIsLevelInstanceDisabled = true; },Use SetIsLevelInstanceDisabled instead.
DisablePersistentAuxiliary,static inline void DisablePersistentAuxiliary() {},Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
Discard,static FRHITransientAliasingInfo Discard(class FRHITexture* Texture),Discard aliasing ops are no longer necessary.
Discard,static FRHITransientAliasingInfo Discard(class FRHIBuffer* Buffer),Discard aliasing ops are no longer necessary.
DiscardRenderTargets,"FORCEINLINE void DiscardRenderTargets(bool Depth, bool Stencil, uint32 ColorBitMask)",DiscardRenderTargets is deprecated and will be removed in future engine versions.
DispatchDraw,"void DispatchDraw(FParallelCommandListSet* ParallelCommandListSet, FRHICommandList& RHICmdList, const FInstanceCullingDrawParams* InstanceCullingDrawParams = nullptr) const;",Use Draw / Dispatch instead.
DispatchUpdates,"RENDERER_API void DispatchUpdates(FRHICommandList& RHICmdList, FRHIBuffer* ScratchBuffer);",Use AddDynamicGeometryUpdatePass instead.
DisplayMessages,"LANDSCAPE_API void DisplayMessages(class FCanvas* Canvas, float& XPos, float& YPos);",DisplayMessages is now deprecated.
DoConvertActors,"UNREALED_API void DoConvertActors( const TArray<AActor*>& ActorsToConvert, UClass* ConvertToClass, const TSet<FString>& ComponentsToConsider, bool bUseSpecialCases, const FString& InStaticMeshPackageName );",Please use UEditorActorSubsystem::DoConvertActors instead.
DoesPackageExist,"bool DoesPackageExist(const FPackagePath& PackagePath, EPackageSegment PackageSegment,",Use the overload that takes a FBulkDataCookedIndex
DrawText,"ENGINE_API float DrawText(const UFont* InFont, FAnsiStringView InText, float X, float Y, float XScale = 1.f, float YScale = 1.f, const FFontRenderInfo& RenderInfo = FFontRenderInfo());",Passing an ANSI string to DrawText has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
DrawWindowToTarget_RenderThread,"virtual void DrawWindowToTarget_RenderThread(FRHICommandListImmediate& RHICmdList, const struct FRenderThreadUpdateContext& Context) {}",Use the RDG version instead.
DumpDraw,static void DumpDraw(const FRDGEventName& DrawEventName) {},This path is no longer supported.
DuplicateClothAsset,"virtual UObject* DuplicateClothAsset(UObject* ClothAsset, UObject* Outer, const FName& Name) const",The experimental Cloth importer is no longer supported.
ElementSize,"int32			ElementSize;",Use GetElementSize/SetElementSize instead.
EmptyClothes,virtual void EmptyClothes() override;,The experimental Cloth importer is no longer supported.
EmptyClothes,virtual void EmptyClothes() = 0;,The experimental Cloth importer is no longer supported.
EnablePersistentAuxiliary,static inline void EnablePersistentAuxiliary() {},Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
End,"virtual void End(IMovieScenePlayer* Player, const UE::MovieScene::FEvaluationHookParams& Params) const {}",Please implement the version that takes a SharedPlaybackState
EndScene,void EndScene() {},FRHICommandListImmediate::EndScene() is deprecated and is no longer necessary. Remove any remaining calls to EndScene(). There is no replacement.
EndUpdate,RENDERER_API void EndUpdate();,Use AddDynamicGeometryUpdatePass instead.
EnumerateAllAssets,"ASSETREGISTRY_API bool EnumerateAllAssets(const TSet<FName>& PackageNamesToSkip,",Use EnumerateAllAssets with InEnumerateFlags instead.
EnumerateAllAssets,"virtual bool EnumerateAllAssets(TFunctionRef<bool(const FAssetData&)> Callback,",Use EnumerateAllAssets with InEnumerateFlags instead.
EnumerateAssets,"ASSETREGISTRY_API bool EnumerateAssets(const FARCompiledFilter& Filter, const TSet<FName>& PackageNamesToSkip,",Use EnumerateAssets with InEnumerateFlags instead.
EnumerateAssets,"virtual bool EnumerateAssets(const FARFilter& Filter, TFunctionRef<bool(const FAssetData&)> Callback,",Use EnumerateAssets with InEnumerateFlags instead.
EnumerateAssets,"virtual bool EnumerateAssets(const FARCompiledFilter& Filter, TFunctionRef<bool(const FAssetData&)> Callback,",Use EnumerateAssets with InEnumerateFlags instead.
EnumerateRHIPipelines,"inline void EnumerateRHIPipelines(ERHIPipeline PipelineMask, FunctionType Function)",EnumerateRHIPipelines is deprecated. Prefer ranged-for iteration over pipelines using 'for (ERHIPipeline Pipeline : MakeFlagsRange(Pipelines))'.
EObjectFlags,inline constexpr EObjectFlags RF_HasPlaceholderType = EObjectFlags(0x20000000);,RF_HasPlaceholderType is no longer in use.
EvaluatePostProcessMeshInstance,"ENGINE_API void EvaluatePostProcessMeshInstance(TArray<FTransform>& OutBoneSpaceTransforms, FCompactPose& InOutPose, FBlendedHeapCurve& OutCurve, const USkeletalMesh* InSkeletalMesh, FVector& OutRootBoneTranslation, UE::Anim::FHeapAttributeContainer& OutAttributes) const;",Please use EvaluatePostProcessMeshInstance with different signature
ExecCommand,void ExecCommand(const Audio::FQuartzQuantizedCommandDelegateData& Data) { OnCommandEvent(Data); },"This should not be called directly, use the ICommandListener interface instead."
ExecCommand,void ExecCommand(const Audio::FQuartzMetronomeDelegateData& Data) { OnMetronomeEvent(Data); },"This should not be called directly, use the IMetronomeEventListener interface instead."
ExecCommand,void ExecCommand(const Audio::FQuartzQueueCommandData& Data) { OnQueueCommandEvent(Data);},"This should not be called directly, use the IQueueCommandListener interface instead."
ExportAggregatedGeometry,static NAVIGATIONSYSTEM_API void ExportAggregatedGeometry(,Use FRecastGeometryExport::ExportAggregatedGeometry.
ExportCloth,"bool ExportCloth(class FDatasmithCloth& Cloth, TSharedPtr<class IDatasmithClothElement>& ClothElement, const TCHAR* FilePath, const TCHAR* AssetsOutputPath) const;",The experimental Cloth importer is no longer supported.
ExportFBX,"static bool ExportFBX(UWorld* World, UMovieScene* MovieScene, IMovieScenePlayer* Player, const TArray<FGuid>& Bindings, const TArray<UMovieSceneTrack*>& Tracks, INodeNameAdapter& NodeNameAdapter, FMovieSceneSequenceIDRef& Template,  const FString& InFBXFileName, FMovieSceneSequenceTransform& RootToLocalTransform);",ExportFBX taking movie scene has been deprecated in favor of a new function that takes current and root movie scene sequences
ExportLevelSequence,"UNREALED_API bool ExportLevelSequence(UMovieScene* MovieScene, const TArray<FGuid>& InBindings, IMovieScenePlayer* MovieScenePlayer, INodeNameAdapter& NodeNameAdapter, FMovieSceneSequenceIDRef SequenceID, const FMovieSceneSequenceTransform& RootToLocalTransform);","ExportLevelSequence taking a movie scene is deprecated, use version that takes movie scene sequences"
ExportLevelSequenceTracks,"UNREALED_API bool ExportLevelSequenceTracks(UMovieScene* MovieScene, IMovieScenePlayer* MovieScenePlayer, FMovieSceneSequenceIDRef InSequenceID, FbxNode* FbxActor, UObject* BoundObject, const TArray<UMovieSceneTrack*>& Tracks, const FMovieSceneSequenceTransform& RootToLocalTransform);","ExportLevelSequenceTracks taking a movie scene is deprecated, use version that takes movie scene sequences"
ExportNavRelevantObjectGeometry,"static NAVIGATIONSYSTEM_API void ExportNavRelevantObjectGeometry(INavRelevantInterface& InOutNavRelevantInterface, FNavigationRelevantData& OutData);",Use FRecastGeometryExport::ExportElementGeometry.
ExportRigidBodyGeometry,"static NAVIGATIONSYSTEM_API void ExportRigidBodyGeometry(UBodySetup& InOutBodySetup,",Use FRecastGeometryExport::ExportRigidBodyGeometry.
ExportRigidBodyGeometry,static NAVIGATIONSYSTEM_API void ExportRigidBodyGeometry(,Use FRecastGeometryExport::ExportRigidBodyGeometry.
ExportToAnimSequence,"static bool ExportToAnimSequence(UAnimSequence* AnimSequence, UAnimSeqExportOption* ExportOptions, UMovieScene* MovieScene, IMovieScenePlayer* Player,",ExportToAnimSequence taking movie scene has been deprecated in favor of a new function that takes current and root movie scene sequences
ExportVertexSoupGeometry,"static NAVIGATIONSYSTEM_API void ExportVertexSoupGeometry(const TArray<FVector>& InVerts, FNavigationRelevantData& OutData);",Use FRecastGeometryExport::ExportVertexSoupGeometry.
FastMarkAsReachableAndClearReachaleInClusterInterlocked_ForGC,COREUOBJECT_API void FastMarkAsReachableAndClearReachaleInClusterInterlocked_ForGC();,FastMarkAsReachableAndClearReachaleInClusterInterlocked_ForGC() can only be used by the garbage collector.
FastMarkAsReachableInterlocked_ForGC,COREUOBJECT_API void FastMarkAsReachableInterlocked_ForGC();,FastMarkAsReachableInterlocked_ForGC() can only be used by the garbage collector.
FAvailableCollectionsMap,"typedef TMap<FCollectionNameType, TSharedRef<FCollection>> FAvailableCollectionsMap;",These typedefs have been deprecated. Replace them with their concrete types.
FClearValueBinding,FClearValueBinding ClearValueBinding = FClearValueBinding(FLinearColor::Transparent);,Please use FRHITextureCreateDesc for creating Textures with a Clear Value Binding
FCollectionColorArray,typedef TArray<FLinearColor> FCollectionColorArray;,These typedefs have been deprecated. Replace them with their concrete types.
FCollectionHierarchyMap,"typedef TMap<FGuid, TArray<FGuid>> FCollectionHierarchyMap;",These typedefs have been deprecated. Replace them with their concrete types.
FCollectionObjectsMap,"typedef TMap<FSoftObjectPath, TArray<FObjectCollectionInfo>> FCollectionObjectsMap;",These typedefs have been deprecated. Replace them with their concrete types.
FConstantValue,FConstantValue(double InValue),Please provide an origin. This is required for Integral() to work correctly.
FDataflowConnection,"DATAFLOWCORE_API FDataflowConnection(UE::Dataflow::FPin::EDirection Direction, FName InType, FName InName, FDataflowNode* OwningNode = nullptr, const FProperty* InProperty = nullptr, FGuid InGuid = FGuid::NewGuid());",Deprecated constructor : use FConnectionParameters to pass parameters
FDataflowInput,"DATAFLOWCORE_API FDataflowInput(const UE::Dataflow::FInputParameters& Param, FGuid InGuid);",Deprecated constructor : Guid is now passed through FInputParameters
FDataflowOutput,"DATAFLOWCORE_API FDataflowOutput(const UE::Dataflow::FOutputParameters& Param, FGuid InGuid);",Deprecated constructor : Guid is now passed through FOutputParameters
FDirectedEdge,"typedef TTuple<int32, int32> FDirectedEdge;",This has moved to the UE::MathCore::Graph namespace
FDirectedTreeElement,typedef UE::MathCore::Graph::FDirectedTreeElement FDirectedTreeElement;,This has moved to the UE::MathCore::Graph namespace
FDynamicRayTracingMeshCommandContex,FDynamicRayTracingMeshCommandContext,"Use FRayTracingShaderBindingData instead of FVisibleRayTracingMeshCommand"");
using FVisibleRayTracingMeshCommand = FRayTracingShaderBindingData;

UE_DEPRECATED(5.5, ""Use FRayTracingShaderBindingDataOneFrameArray instead of FRayTracingMeshCommandOneFrameArray"");
using FRayTracingMeshCommandOneFrameArray = FRayTracingShaderBindingDataOneFrameArray;

class FRayTracingMeshCommandContext
{
public:

	virtual ~FRayTracingMeshCommandContext() {}

	virtual FRayTracingMeshCommand& AddCommand(const FRayTracingMeshCommand& Initializer) = 0;

	virtual void FinalizeCommand(FRayTracingMeshCommand& RayTracingMeshCommand) = 0;
};

using FTempRayTracingMeshCommandStorage = TArray<FRayTracingMeshCommand>;

using FCachedRayTracingMeshCommandStorage = TSparseArray<FRayTracingMeshCommand>;

using FDynamicRayTracingMeshCommandStorage = TChunkedArray<FRayTracingMeshCommand>;

template<class T>
class FCachedRayTracingMeshCommandContext : public FRayTracingMeshCommandContext
{
public:
	FCachedRayTracingMeshCommandContext(T& InDrawListStorage) : DrawListStorage(InDrawListStorage) {}

	virtual FRayTracingMeshCommand& AddCommand(const FRayTracingMeshCommand& Initializer) override final
	{
		CommandIndex = DrawListStorage.Add(Initializer);
		return DrawListStorage[CommandIndex];
	}

	virtual void FinalizeCommand(FRayTracingMeshCommand& RayTracingMeshCommand) override final {}

	int32 CommandIndex = -1;

private:
	T& DrawListStorage;
};

class FDynamicRayTracingMeshCommandContext : public FRayTracingMeshCommandContext
{
public:
	FDynamicRayTracingMeshCommandContext
	(
		FDynamicRayTracingMeshCommandStorage& InDynamicCommandStorage,
		FRayTracingShaderBindingDataOneFrameArray& InDirtyShaderBindings,
		const FRHIRayTracingGeometry* InRayTracingGeometry,
		uint32 InGeometrySegmentIndex,
		FRayTracingSBTAllocation* InSBTAllocation
	) :
		DynamicCommandStorage(InDynamicCommandStorage),
		DirtyShaderBindings(InDirtyShaderBindings),
		RayTracingGeometry(InRayTracingGeometry),
		GeometrySegmentIndex(InGeometrySegmentIndex),
		SBTAllocation(InSBTAllocation),
		RayTracingInstanceIndex(INDEX_NONE),
		RayTracingDecalInstanceIndex(INDEX_NONE)
	{}

	UE_DEPRECATED(5.5, ""Provide RayTracingGeometry and GlobalGeometrySegmentIndex and DecalGlobalGeometrySegmentIndex instead"
FEntityCreationContext,explicit FEntityCreationContext(const int32 InNumSpawned) : FEntityCreationContext() {},This constructor is now deprecated and defunct. Use one of the others instead.
FFavoritedBlueprintPaletteItem,FFavoritedBlueprintPaletteItem(TSharedPtr<FEdGraphSchemaAction> PaletteAction);,"Provide a dereferenced FEdGraphSchemaAction, after validating it in the caller"
FFrontendFilte,CONTENTBROWSER_API FFrontendFilter_ShowOtherDevelopers : public FFrontendFilter,"FFrontendFilter_Text has been deprecated in favor of FAssetTextFilter, used by SAssetView to perform text filtering in parallel."");
class CONTENTBROWSER_API FFrontendFilter_Text : public FFrontendFilter
{
public:
	FFrontendFilter_Text();
	~FFrontendFilter_Text();

	// FFrontendFilter implementation
	virtual FString GetName() const override { return TEXT(""TextFilter""); }
	virtual FText GetDisplayName() const override { return LOCTEXT(""FrontendFilter_Text"", ""Text""); }
	virtual FText GetToolTipText() const override { return LOCTEXT(""FrontendFilter_TextTooltip"", ""Show only assets that match the input text""); }

	// IFilter implementation
	virtual bool PassesFilter(FAssetFilterType InItem) const override;

public:
	/** Returns the unsanitized and unsplit filter terms */
	FText GetRawFilterText() const;

	/** Set the Text to be used as the Filter's restrictions */
	void SetRawFilterText(const FText& InFilterText);

	/** Get the last error returned from lexing or compiling the current filter text */
	FText GetFilterErrorText() const;

	/** If bIncludeClassName is true, the text filter will include an asset's class name in the search */
	void SetIncludeClassName(const bool InIncludeClassName);

	/** If bIncludeAssetPath is true, the text filter will match against full Asset path */
	void SetIncludeAssetPath(const bool InIncludeAssetPath);

	bool GetIncludeAssetPath() const;

	/** If bIncludeCollectionNames is true, the text filter will match against collection names as well */
	void SetIncludeCollectionNames(const bool InIncludeCollectionNames);

	bool GetIncludeCollectionNames() const;
private:
	/** Handles an on collection created event */
	void HandleCollectionCreated(const FCollectionNameType& Collection);

	/** Handles an on collection destroyed event */
	void HandleCollectionDestroyed(const FCollectionNameType& Collection);

	/** Handles an on collection renamed event */
	void HandleCollectionRenamed(const FCollectionNameType& OriginalCollection, const FCollectionNameType& NewCollection);

	/** Handles an on collection updated event */
	void HandleCollectionUpdated(const FCollectionNameType& Collection);

	/** Rebuild the array of dynamic collections that are being referenced by the current query */
	void RebuildReferencedDynamicCollections();

	/** An array of dynamic collections that are being referenced by the current query. These should be tested against each asset when it's looking for collections that contain it */
	TArray<FCollectionNameType> ReferencedDynamicCollections;

	/** Transient context data, used when calling PassesFilter. Kept around to minimize re-allocations between multiple calls to PassesFilter */
	TSharedRef<class FFrontendFilter_TextFilterExpressionContext> TextFilterExpressionContext;

	/** Expression evaluator that can be used to perform complex text filter queries */
	FTextFilterExpressionEvaluator TextFilterExpressionEvaluator;

	/** Delegate handles */
	FDelegateHandle OnCollectionCreatedHandle;
	FDelegateHandle OnCollectionDestroyedHandle;
	FDelegateHandle OnCollectionRenamedHandle;
	FDelegateHandle OnCollectionUpdatedHandle;
};

/** A filter that displays only checked out assets */
class CONTENTBROWSER_API FFrontendFilter_CheckedOut : public FFrontendFilter, public TSharedFromThis<FFrontendFilter_CheckedOut>
{
public:
	FFrontendFilter_CheckedOut(TSharedPtr<FFrontendFilterCategory> InCategory);

	// FFrontendFilter implementation
	virtual FString GetName() const override { return TEXT(""CheckedOut""); }
	virtual FText GetDisplayName() const override { return LOCTEXT(""FrontendFilter_CheckedOut"", ""Checked Out""); }
	virtual FText GetToolTipText() const override { return LOCTEXT(""FrontendFilter_CheckedOutTooltip"", ""Show only assets that you have checked out or pending for add.""); }
	virtual void ActiveStateChanged(bool bActive) override;
	virtual void SetCurrentFilter(TArrayView<const FName> InSourcePaths, const FContentBrowserDataFilter& InBaseFilter) override;

	// IFilter implementation
	virtual bool PassesFilter(FAssetFilterType InItem) const override;

private:
	
	/** Request the source control status for this filter */
	void RequestStatus();

	/** Callback when source control operation has completed */
	void SourceControlOperationComplete(const FSourceControlOperationRef& InOperation, ECommandResult::Type InResult);

	bool bSourceControlEnabled;
};

/** A filter that displays assets not tracked by source control */
class CONTENTBROWSER_API FFrontendFilter_NotSourceControlled : public FFrontendFilter, public TSharedFromThis<FFrontendFilter_NotSourceControlled>
{
public:
	FFrontendFilter_NotSourceControlled(TSharedPtr<FFrontendFilterCategory> InCategory);

	// FFrontendFilter implementation
	virtual FString GetName() const override { return TEXT(""NotSourceControlled""); }
	virtual FText GetDisplayName() const override { return LOCTEXT(""FrontendFilter_NotSourceControlled"", ""Not Revision Controlled""); }
	virtual FText GetToolTipText() const override { return LOCTEXT(""FrontendFilter_NotSourceControlledTooltip"", ""Show only assets that are not tracked by revision control.""); }
	virtual void ActiveStateChanged(bool bActive) override;
	virtual void SetCurrentFilter(TArrayView<const FName> InSourcePaths, const FContentBrowserDataFilter& InBaseFilter) override;

	// IFilter implementation
	virtual bool PassesFilter(FAssetFilterType InItem) const override;

private:

	/** Request the source control status for this filter */
	void RequestStatus();

	/** Callback when source control operation has completed */
	void SourceControlOperationComplete(const FSourceControlOperationRef& InOperation, ECommandResult::Type InResult);

	bool bSourceControlEnabled;
	bool bIsRequestStatusRunning;
	bool bInitialRequestCompleted;
};

/** A filter that displays only modified assets */
class CONTENTBROWSER_API FFrontendFilter_Modified : public FFrontendFilter
{
public:
	FFrontendFilter_Modified(TSharedPtr<FFrontendFilterCategory> InCategory);
	~FFrontendFilter_Modified();

	// FFrontendFilter implementation
	virtual FString GetName() const override { return TEXT(""Modified""); }
	virtual FText GetDisplayName() const override { return LOCTEXT(""FrontendFilter_Modified"", ""Modified""); }
	virtual FText GetToolTipText() const override { return LOCTEXT(""FrontendFilter_ModifiedTooltip"", ""Show only assets that have been modified and not yet saved.""); }
	virtual void ActiveStateChanged(bool bActive) override;

	// IFilter implementation
	virtual bool PassesFilter(FAssetFilterType InItem) const override;

private:

	/** Handler for when a package's dirty state has changed */
	void OnPackageDirtyStateUpdated(UPackage* Package);

	bool bIsCurrentlyActive;
};

/** A filter that displays blueprints that have replicated properties */
class CONTENTBROWSER_API FFrontendFilter_ReplicatedBlueprint : public FFrontendFilter
{
public:
	FFrontendFilter_ReplicatedBlueprint(TSharedPtr<FFrontendFilterCategory> InCategory) : FFrontendFilter(InCategory) {}

	// FFrontendFilter implementation
	virtual FString GetName() const override { return TEXT(""ReplicatedBlueprint""); }
	virtual FText GetDisplayName() const override { return LOCTEXT(""FFrontendFilter_ReplicatedBlueprint"", ""Replicated Blueprints""); }
	virtual FText GetToolTipText() const override { return LOCTEXT(""FFrontendFilter_ReplicatedBlueprintToolTip"", ""Show only blueprints with replicated properties.""); }

	// IFilter implementation
	virtual bool PassesFilter(FAssetFilterType InItem) const override;
};

/** A filter that compares the value of an asset registry tag to a target value */
class CONTENTBROWSER_API FFrontendFilter_ArbitraryComparisonOperation : public FFrontendFilter
{
public:
	FFrontendFilter_ArbitraryComparisonOperation(TSharedPtr<FFrontendFilterCategory> InCategory);

	// FFrontendFilter implementation
	virtual FString GetName() const override;
	virtual FText GetDisplayName() const override;
	virtual FText GetToolTipText() const override;
	virtual void ModifyContextMenu(FMenuBuilder& MenuBuilder) override;
	virtual void SaveSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString) const override;
	virtual void LoadSettings(const FString& IniFilename, const FString& IniSection, const FString& SettingsString) override;

	// IFilter implementation
	virtual bool PassesFilter(FAssetFilterType InItem) const override;

protected:
	static FString ConvertOperationToString(ETextFilterComparisonOperation Op);
	
	void SetComparisonOperation(ETextFilterComparisonOperation NewOp);
	bool IsComparisonOperationEqualTo(ETextFilterComparisonOperation TestOp) const;

	FText GetKeyValueAsText() const;
	FText GetTargetValueAsText() const;
	void OnKeyValueTextCommitted(const FText& InText, ETextCommit::Type InCommitType);
	void OnTargetValueTextCommitted(const FText& InText, ETextCommit::Type InCommitType);

public:
	FName TagName;
	FString TargetTagValue;
	ETextFilterComparisonOperation ComparisonOp;
};

/** An inverse filter that allows display of content in developer folders that are not the current user's */
class UE_DEPRECATED(5.5, ""This frontend filter has been deprecated and replaced with backend filtering. see FFilter_HideOtherDevelopers."
FGuidToCollectionNamesMap,"typedef TMap<FGuid, FCollectionNameType> FGuidToCollectionNamesMap;",These typedefs have been deprecated. Replace them with their concrete types.
FileSize,"int64 FileSize(const FPackagePath& PackagePath, EPackageSegment PackageSegment,",Use the overload that takes a FBulkDataCookedIndex
FillRayTracingInstanceUploadBuffer,RENDERER_API void FillRayTracingInstanceUploadBuffer(,Must specify BaseInstancePrefixSum.
FillShowMenu,"static inline void FillShowMenu(class FMenuBuilder& MenuBuilder, TArray<FShowMenuCommand> MenuCommands, int32 EntryOffset)",Use the version of the show flags builder in FShowFlagMenuCommands::BuildShowFlagsMenu which takes a UToolMenu instead
FindBindingFromObject,"LEVELSEQUENCE_API virtual FGuid FindBindingFromObject(UObject* InObject, UObject* Context) const override;",Use the version that takes a SharedPlaybackState
FindBindingFromObject,"MOVIESCENE_API FGuid FindBindingFromObject(UObject* InObject, UObject* InContext) const;",This method has been deprecated as it produces errors for subobjects. Please call UMovieSceneSequence::FindBindingFromObject passing in a SharedPlaybackState
FindBindingFromObject,"MOVIESCENE_API virtual FGuid FindBindingFromObject(UObject* InObject, UObject* Context) const;",Use the version that takes a SharedPlaybackState
FindComponentByInterface,T* FindComponentByInterface() const,This version incorrectly casts to the UInterface type used for reflection. Use FindComponentByInterface<IMyInterface>() instead
FindInputPreProcessor,SLATE_API int32 FindInputPreProcessor(TSharedPtr<class IInputProcessor> InputProcessor) const;,"This method is deprecated and will use EInputPreProcessorType::Game as a default. For a more accurate search result, please use the new version taking a EInputPreProcessorType"
FindOrCreateShaderBindingTable,virtual FRHIShaderBindingTable* FindOrCreateShaderBindingTable(const FRHIRayTracingPipelineState* Pipeline) = 0;,Create standalone FRHIShaderBindingTable instead.
FindRuntimeObject,"UMG_API UObject* FindRuntimeObject(const UWidgetTree& WidgetTree, UUserWidget& UserWidget) const;",Please use the version that takes a SharedPlaybackState and Sequence
FindText,"static FORCEINLINE bool FindText(const FTextKey& Namespace, const FTextKey& Key, FText& OutText, const FString* const SourceString = nullptr)","FText::FindText is deprecated as it can no longer find untranslated text. Consider FText::FindTextInLiveTable_Advanced or FText::AsLocalizable_Advanced as a replacement, depending on your use-case."
FIoChunkHas,FIoChunkHash,FIoChunkHash is deprecated. Use FIoHash instead.
FLevelSequenceAnimTrackAdapter,"UNREALED_API FLevelSequenceAnimTrackAdapter(IMovieScenePlayer* InMovieScenePlayer, UMovieScene* InMovieScene, const FMovieSceneSequenceTransform& InRootToLocalTransform, UMovieSceneSkeletalAnimationTrack* InAnimTrack = nullptr);","FLevelSequenceAnimTrackAdapter constructor taking a movie scene is deprecated, use version that takes movie scene sequences"
FlushAsyncLoading,COREUOBJECT_API void FlushAsyncLoading() {},No longer provides any functionality
FlushPendingDeletes,inline int32 FlushPendingDeletes() { return 0; },FlushPendingDeletes is deprecated and removed. Use RHICmdList.ImmediateFlush(EImmediateFlushType::FlushRHIThreadFlushResources)
FlushStreamingToExternalStreamingObject,URuntimeHashExternalStreamingObjectBase* FlushStreamingToExternalStreamingObject(const FString& ExternalStreamingObjectName) { return FlushStreamingToExternalStreamingObject(); },"FlushStreamingToExternalStreamingObject(const FString& ) is deprecated, use FlushStreamingToExternalStreamingObject() instead"
FMassArchetypeCompositionDescriptor,"FMassArchetypeCompositionDescriptor(const FMassFragmentBitSet& InFragments, const FMassTagBitSet& InTags, const FMassChunkFragmentBitSet& InChunkFragments, const FMassSharedFragmentBitSet& InSharedFragments)",This FMassArchetypeCompositionDescriptor constructor is deprecated. Please explicitly provide FConstSharedFragmentBitSet.
FMassArchetypeCompositionDescriptor,"FMassArchetypeCompositionDescriptor(TConstArrayView<const UScriptStruct*> InFragments, const FMassTagBitSet& InTags, const FMassChunkFragmentBitSet& InChunkFragments, const FMassSharedFragmentBitSet& InSharedFragments)",This FMassArchetypeCompositionDescriptor constructor is deprecated. Please explicitly provide FConstSharedFragmentBitSet.
FMassArchetypeCompositionDescriptor,"FMassArchetypeCompositionDescriptor(TConstArrayView<FInstancedStruct> InFragmentInstances, const FMassTagBitSet& InTags, const FMassChunkFragmentBitSet& InChunkFragments, const FMassSharedFragmentBitSet& InSharedFragments)",This FMassArchetypeCompositionDescriptor constructor is deprecated. Please explicitly provide FConstSharedFragmentBitSet.
FMassArchetypeCompositionDescriptor,"FMassArchetypeCompositionDescriptor(FMassFragmentBitSet&& InFragments, FMassTagBitSet&& InTags, FMassChunkFragmentBitSet&& InChunkFragments, FMassSharedFragmentBitSet&& InSharedFragments)",This FMassArchetypeCompositionDescriptor constructor is deprecated. Please explicitly provide FConstSharedFragmentBitSet.
FMovieSceneChannelData,"MOVIESCENE_API FMovieSceneChannelData(TArray<FFrameNumber>* InTimes, FKeyHandleLookupTable* InKeyHandles, FMovieSceneChannel* InChannel = nullptr);",Constructor that takes an optional FMovieSceneChannel is now deprecated. FMovieSceneChannel is now required.
FMovieSceneNestedSequenceTransform,FMovieSceneNestedSequenceTransform(const FMovieSceneTimeWarping& InWarping),Please update your code to use a FMovieSceneTimeWarpVariant
FMovieSceneNestedSequenceTransform,"FMovieSceneNestedSequenceTransform(FMovieSceneTimeTransform InLinearTransform, const FMovieSceneTimeWarping& InWarping)",Please update your code to use a FMovieSceneTimeWarpVariant
FNavigationDirtyArea,"ENGINE_API FNavigationDirtyArea(const FBox& InBounds, int32 InFlags, UObject* const InOptionalSourceObject = nullptr);",Use the constructor taking ENavigationDirtyFlag and FNavigationElement instead.
FNavigationDirtyElement,ENGINE_API FNavigationDirtyElement();,The default constructor will be remove. Use the version with FNavigationElement instead.
FNavigationDirtyElement,ENGINE_API explicit FNavigationDirtyElement(UObject* InOwner);,Use the version with FNavigationElement instead.
FNavigationDirtyElement,"ENGINE_API FNavigationDirtyElement(UObject* InOwner, INavRelevantInterface* InNavInterface, int32 InFlagsOverride = 0, const bool bUseWorldPartitionedDynamicMode = false);",Use the version with FNavigationElement instead.
FNavigationElement,"ENGINE_API explicit FNavigationElement(const UObject* Object, const uint64 SubElementId = INDEX_NONE)",Temporary constructor to allow deprecation of other navigation types. Use the version taking an object reference instead.
FNavigationOctreeElement,explicit FNavigationOctreeElement(UObject& SourceObject),Use the constructor taking a FNavigationElement instead.
FNavigationRelevantData,ENGINE_API FNavigationRelevantData(UObject& Source);,Use the constructor using FNavigationElement instead.
ForEachLayer,LANDSCAPE_API void ForEachLayer(TFunctionRef<void(FLandscapeLayer&)> Fn);,Use ForEachLayerConst
FormatTime,"inline FString FormatTime(const double Time, const double Precision = 0.0) { return UE::Insights::FormatTime(Time, Precision); }",TimeUtils namespace was merged into UE::Insights namespace
FormatTimeAuto,"inline FString FormatTimeAuto(const double Duration, const int32 NumDigits = 1) { return UE::Insights::FormatTimeAuto(Duration, NumDigits); }",TimeUtils namespace was merged into UE::Insights namespace
FormatTimeHMS,"inline FString FormatTimeHMS(const double Time, const double Precision = 0.0) { return UE::Insights::FormatTimeHMS(Time, Precision); }",TimeUtils namespace was merged into UE::Insights namespace
FormatTimeMs,"inline FString FormatTimeMs(const double Duration, const int32 NumDigits = 2, bool bAddTimeUnit = false) { return UE::Insights::FormatTimeMs(Duration, NumDigits, bAddTimeUnit); }",TimeUtils namespace was merged into UE::Insights namespace
FormatTimeSplit,"inline FString FormatTimeSplit(const UE::Insights::FTimeSplit& TimeSplit, const double Precision = 0.0) { return UE::Insights::FormatTimeSplit(TimeSplit, Precision); }",TimeUtils namespace was merged into UE::Insights namespace
FormatTimeSplit,"inline FString FormatTimeSplit(const double Time, const double Precision = 0.0) { return UE::Insights::FormatTimeSplit(Time, Precision); }",TimeUtils namespace was merged into UE::Insights namespace
FormatTimeValue,"inline FString FormatTimeValue(const double Duration, const int32 NumDigits = 1) { return UE::Insights::FormatTimeValue(Duration, NumDigits); }",TimeUtils namespace was merged into UE::Insights namespace
ForUseOnlyByLocMacroAndGraphNodeTextLiterals_CreateText,"static FORCEINLINE FText ForUseOnlyByLocMacroAndGraphNodeTextLiterals_CreateText(const TCHAR* InTextLiteral, const TCHAR* InNamespace, const TCHAR* InKey)",FInternationalization::ForUseOnlyByLocMacroAndGraphNodeTextLiterals_CreateText is deprecated in favor of FText::AsLocalizable_Advanced (NOTE: FText::AsLocalizable_Advanced takes its arguments in a different order!).
FPBDBendingConstraints,"FPBDBendingConstraints(const FSolverParticles& InParticles,",Use constructor with BucklingRatioMultipliers
FPBDBendingConstraintsBase,"FPBDBendingConstraintsBase(const FSolverParticlesRange& InParticles,",Use a constructor with BucklingRatioMultipliers.
FPBDBendingConstraintsBase,"FPBDBendingConstraintsBase(const FSolverParticles& InParticles,",Use a constructor with BucklingRatioMultipliers.
FPBDBendingConstraintsBase,"FPBDBendingConstraintsBase(const FSolverParticles& InParticles,",Use a constructor with BucklingRatioMultipliers.
FRayTracingShaderBindingData,"FRayTracingShaderBindingData(const FRayTracingMeshCommand* InRayTracingMeshCommand, uint32 InInstanceIndex, bool bInHidden = false)",Provide RayTracingGeometry and SBTSegmentIndex instead of InstanceIndex
FreeBufferResource,ENGINE_API void FreeBufferResource(FSoundBuffer* SoundBuffer);,This is no longer used.  Existing calls may be deleted
FreePersistentAuxiliary,static CORE_API void FreePersistentAuxiliary(void* InPtr);,Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
FRHIRayTracingCommandList,typedef FRHICommandListImmediate FRHIRayTracingCommandList;,Use FRHICommandList instead.
FRHIResourceCreateInfo,"FRHIResourceCreateInfo(const TCHAR* InDebugName, FResourceBulkDataInterface* InBulkData)",Please use FRHITextureCreateDesc for creating Textures with Bulk Data
FRHIResourceCreateInfo,"FRHIResourceCreateInfo(const TCHAR* InDebugName, const FClearValueBinding& InClearValueBinding)",Please use FRHITextureCreateDesc for creating Textures with a Clear Value Binding
FRHIResourceCreateInfo,FRHIResourceCreateInfo(uint32 InExtData),Please use FRHITextureCreateDesc for creating Textures with Ext Data
FRunningTileElement,typedef TRunningTileElement<FRecastTileGeneratorWrapper> FRunningTileElement;,FRunningTileElement is deprecated. Please use TRunningTileElement<FRecastTileGeneratorWrapper> instead.
FShowMenuCommand,"FShowMenuCommand(TSharedPtr<FUICommandInfo> InShowMenuItem, const FText& InLabelOverride)",Use the version of the show flags builder in FShowFlagMenuCommands
FShowMenuCommand,FShowMenuCommand(TSharedPtr<FUICommandInfo> InShowMenuItem),Use the version of the show flags builder in FShowFlagMenuCommands
FSpawnableRestoreState,FSpawnableRestoreState(UMovieScene* MovieScene);,This constructor is deprecated in favor of passing in shared playback state
FSubSequencePath,"MOVIESCENE_API explicit FSubSequencePath(FMovieSceneSequenceID LeafID, IMovieScenePlayer& Player);",Please use the version that takes an FSharedPlaybackState
FTensorBindingGPU,typedef FTensorBindingCPU FTensorBindingGPU;,Use UE::NNE::FTensorBindingCPU instead.
FUE5LWCRenderingStreamObjectVersion,typedef FNaniteResearchStreamObjectVersion FUE5LWCRenderingStreamObjectVersion;,"FUE5LWCRenderingStreamObjectVersion has been repurposed, use FNaniteResearchStreamObjectVersion instead"
FullPlayRange,FMovieSceneFrameRange FullPlayRange;,Please use GetSequence()->GetMovieScene()->GetPlaybackRange().
FViewModelHierarchyOperation,explicit FViewModelHierarchyOperation(const TSharedPtr<ViewModelType>& InAnyModel),Please use the FSharedViewModelData overload by passing ->GetSharedData()
FWidgetStateBitfield,"UMG_API FWidgetStateBitfield(const FName InStateName, const uint8 InValue);",FWidgetStateBitfield currently no longer supports enum states
FXPBDAnisotropicBendingConstraints,"FXPBDAnisotropicBendingConstraints(const FSolverParticles& InParticles,",Use constructor with BucklingRatioMultipliers
FXPBDBendingConstraints,"FXPBDBendingConstraints(const FSolverParticles& InParticles,",Use constructor with BucklingRatioMultipliers
GatherData,"NAVIGATIONSYSTEM_API void GatherData(const ARecastNavMesh* NavMesh, int32 InNavDetailFlags, const TArray<int32>& TileSet);",Use the version of this function that takes an array of FNavTileRefs instead
GatherSharedInputs,void GatherSharedInputs(,"GatherSharedInputs no longer processes external includes, as these are not needed by SCW anymore"
GatherSharedInputsAnsi,void GatherSharedInputsAnsi(,GatherSharedInputsAnsi is no longer needed since external includes are no longer serialized; use GetSharedInputs
GenerateCompressedLayers,NAVIGATIONSYSTEM_API virtual bool GenerateCompressedLayers(FNavMeshBuildContext& BuildContext);,Use the overload with dtLinkBuilderData instead.
GenerateMips,RHI_API void GenerateMips(FRHITexture*);,GenerateMips on RHI command lists is deprecated and no longer functions. Use the FGenerateMips helper class from the RenderCore module to generate mips on textures.
GenerateNavigationData,NAVIGATIONSYSTEM_API bool GenerateNavigationData(FNavMeshBuildContext& BuildContext);,Use the overload with dtLinkBuilderData instead.
GenerateNavigationDataLayer,"NAVIGATIONSYSTEM_API bool GenerateNavigationDataLayer(FNavMeshBuildContext& BuildContext, FTileCacheCompressor& TileCompressor, FTileCacheAllocator& GenNavAllocator, FTileGenerationContext& GenerationContext, int32 LayerIdx);",Use the overload with dtLinkBuilderData instead.
GenerateNavigationDataTimeSliced,NAVIGATIONSYSTEM_API ETimeSliceWorkResult GenerateNavigationDataTimeSliced(FNavMeshBuildContext& BuildContext);,Use the overload with dtLinkBuilderData instead.
GenerateRecastFilter,"NAVIGATIONSYSTEM_API void GenerateRecastFilter(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext);",Use the new version without RasterContext instead.
GenerateRecastFilterTimeSliced,"NAVIGATIONSYSTEM_API ETimeSliceWorkResult GenerateRecastFilterTimeSliced(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext);",Use the new version without RasterContext instead.
GetAccumualtedPayloadActivityInfo,virtual FPayloadActivityInfo GetAccumualtedPayloadActivityInfo() const,Use IVirtualizationSystem::GetSystemStatistics instead
GetAction,ENGINE_API ActionGroup GetAction(int32 Index);,"FGraphActionListBuilderBase::ActionGroup has been deprecated, access TSharedPtr<FEdGraphSchemaAction> directly using GetSchemaAction"
GetActionFilteredWeight,"virtual float GetActionFilteredWeight(const FGraphActionListBuilderBase::ActionGroup& InCurrentAction, const TArray<FString>& InFilterTerms, const TArray<FString>& InSanitizedFilterTerms, const TArray<UEdGraphPin*>& DraggedFromPins) const override;","FGraphActionListBuilderBase::ActionGroup weight calculation was always performed on the first action, provide that if scoring a FGraphActionListBuilderBase::ActionGroup, or just provide the FEdGraphSchemaAction"
GetActionFilteredWeight,"virtual float GetActionFilteredWeight(const FGraphActionListBuilderBase::ActionGroup& InCurrentAction, const TArray<FString>& InFilterTerms, const TArray<FString>& InSanitizedFilterTerms, const TArray<UEdGraphPin*>& DraggedFromPins) const override;","FGraphActionListBuilderBase::ActionGroup weight calculation was always performed on the first action, provide that if scoring a FGraphActionListBuilderBase::ActionGroup, or just provide the FEdGraphSchemaAction"
GetActionFilteredWeight,"ENGINE_API virtual float GetActionFilteredWeight(const FGraphActionListBuilderBase::ActionGroup& InCurrentAction, const TArray<FString>& InFilterTerms, const TArray<FString>& InSanitizedFilterTerms, const TArray<UEdGraphPin*>& DraggedFromPins) const;","FGraphActionListBuilderBase::ActionGroup weight calculation was always performed on the first action, provide that if scoring a FGraphActionListBuilderBase::ActionGroup, or just provide the FEdGraphSchemaAction"
GetActiveRunner,FMovieSceneEntitySystemRunner* GetActiveRunner() const { return &GetRunner().Get(); },Please use GetRunner()
GetAlignmentOverrides,"virtual bool GetAlignmentOverrides(EHorizontalAlignment& OutHorizontalAlignment, EVerticalAlignment& OutVerticalAlignment, bool& bOutAutoWidth) const { return false; }",Use the version that outputs FMenuEntryStyleParams.
GetAllKeypointStates,"virtual bool GetAllKeypointStates(EControllerHand Hand, TArray<FVector>&OutPositions, TArray<FQuat>&OutRotations, TArray<float>&OutRadii) const { return false; } // No longer pure virtual so that it can be removed.",Deprecated in favor of the version that explicitly returns OutIsTracked
GetAllowList,"const TMap<FString, FPermissionListOwners>& GetAllowList() const;",GetAllowList is deprecated. Use GetAllowListEntries instead.
GetAssetDataMap,const FConstAssetDataMap& GetAssetDataMap() const;,FAssetDataMap is a complicated implementation detail of FAssetRegistryState. Use the enumeration functions on FAssetRegistryState instead of using it directly.
GetAssetsByClassPathName,const TArray<const FAssetData*>& GetAssetsByClassPathName(const FTopLevelAssetPath ClassPathName) const;,Use EnumerateAssetsByClassPathName instead.
GetAssetsByPackageName,TArrayView<FAssetData const* const> GetAssetsByPackageName(const FName PackageName) const;,Use EnumerateAssetsByPackageName or CopyAssetsByPackageName instead.
GetAssetsByTagName,const TArray<const FAssetData*>& GetAssetsByTagName(const FName TagName) const;,Use EnumerateAssetsByTagName instead.
GetAutoCompleteSuggestions,"virtual void GetAutoCompleteSuggestions(const TCHAR* Input, TArray<FString>& Out){};",Use GetSuggestedCompletions instead
GetBoneSelectedMaterialID,const int GetBoneSelectedMaterialID() const,Bone Selected Material does not have a material ID anymore.
GetBoneSelectedMaterialIndex,FORCEINLINE const int32 GetBoneSelectedMaterialIndex() const { return BoneSelectedMaterialIndex; },Bone Selected Material does not have a material index anymore.
GetBuffer,virtual const FSoundBuffer* GetBuffer() const { return nullptr; },The Buffer member no longer exists.  Use GetNumChannels() to qeury channel count.
GetBulkDataArchive,FFileRegionMemoryWriter& GetBulkDataArchive(),Use the overload that takes a FBulkDataCookedIndex
GetCellEffectiveWantedState,EDataLayerRuntimeState GetCellEffectiveWantedState(int32 InDataLayersStateEpoch) const { return EDataLayerRuntimeState::Unloaded; },Use version that takes FWorldPartitionStreamingContext instead.
GetCellEffectiveWantedState,EDataLayerRuntimeState GetCellEffectiveWantedState() const { return EDataLayerRuntimeState::Unloaded; },Use version that takes FWorldPartitionStreamingContext instead.
GetCells,"ENGINE_API void GetCells(const TArray<FWorldPartitionStreamingSource>& Sources, UWorldPartitionRuntimeHash::FStreamingSourceCells& OutActivateCells, UWorldPartitionRuntimeHash::FStreamingSourceCells& OutLoadCells, bool bEnableZCulling) const {}",Use version that takes FWorldPartitionStreamingContext instead.
GetChars,CORE_API const TCHAR* GetChars() const;,GetChars is deprecated as FTextKey may now store its internal data as UTF-8. Use ToString/AppendString instead.
GetCinematicShotCamera,TWeakObjectPtr<AActor> GetCinematicShotCamera() const;,Use FCameraCutPlaybackCapability::LastViewTargetCamera instead.
GetCloth,virtual TSharedPtr< IDatasmithClothElement > GetCloth(int32 InIndex) override;,The experimental Cloth importer is no longer supported.
GetCloth,virtual const TSharedPtr< IDatasmithClothElement >& GetCloth(int32 InIndex) const override;,The experimental Cloth importer is no longer supported.
GetCloth,virtual TSharedPtr< IDatasmithClothElement > GetCloth(int32 InIndex) = 0;,The experimental Cloth importer is no longer supported.
GetCloth,virtual const TSharedPtr< IDatasmithClothElement >& GetCloth(int32 InIndex) const = 0;,The experimental Cloth importer is no longer supported.
GetClothesCount,virtual int32 GetClothesCount() const override;,The experimental Cloth importer is no longer supported.
GetClothesCount,virtual int32 GetClothesCount() const = 0;,The experimental Cloth importer is no longer supported.
GetCollisionMaterial,const FPBDCollisionConstraintMaterial& GetCollisionMaterial() const { return Material; },Use specific material property getters instead
GetComponentTypeFilter,virtual TSubclassOf<UActorComponent> GetComponentTypeFilter() const { return nullptr; },Use version with ObjectContext instead
GetCompressedBufferSize,"virtual int32 GetCompressedBufferSize(int32 UncompressedSize, int32 CompressionData) {return -1;};",Switch to 64 bit version for memory sizes
GetCompressionFormatFromDeprecatedFlags,CORE_API static FName GetCompressionFormatFromDeprecatedFlags(ECompressionFlags DeprecatedFlags);,Use the direct FName instead e.g NAME_Oodle
GetCookData,FArchiveCookData* GetCookData(),Use GetCookContext or CookingTarget or GetSavePackageData.
GetCookData,FArchiveCookData* GetCookData(),Use GetCookContext or CookingTarget or GetSavePackageData
GetCookedEditorLocalizationPaths,static TArray<FString> GetCookedEditorLocalizationPaths() { return TArray<FString>(); },Cooked editor localization path no longer exist. Cooked editors now load game localization paths.
GetCurrentInputDecay,ENGINE_API const float GetCurrentInputDecay(FNetworkPhysicsData* PhysicsData);,"Deprecated, use FAsyncNetworkPhysicsComponent::GetCurrentInputDecay instead."
GetCustomThreadPool,virtual FQueuedThreadPool* GetCustomThreadPool() const { return GThreadPool; },GetCustomThreadPool() is no longer supported.
GetDataForObject,NAVIGATIONSYSTEM_API const FNavigationRelevantData* GetDataForObject(const UObject& Object) const;,Use GetDataForElement instead.
GetDataForObject,NAVIGATIONSYSTEM_API const FNavigationRelevantData* GetDataForObject(const UObject& Object) const;,Use GetDataForElement instead.
GetDatasmithClothFromFile,DATASMITHCORE_API FDatasmithPackedCloths GetDatasmithClothFromFile(const FString& Path);,The experimental Cloth importer is no longer supported.
GetDataStorage,TYPEDELEMENTFRAMEWORK_API const IEditorDataStorageProvider* GetDataStorage() const;,Function has moved to modular features. Use UE::Editor::DataStorage::GetDataStorageFeature instead.
GetDataStorageCompatibility,TYPEDELEMENTFRAMEWORK_API const IEditorDataStorageCompatibilityProvider* GetDataStorageCompatibility() const;,Function has moved to modular features. Use UE::Editor::DataStorage::GetDataStorageFeature instead.
GetDataStorageUi,TYPEDELEMENTFRAMEWORK_API const IEditorDataStorageUiProvider* GetDataStorageUi() const;,Function has moved to modular features. Use UE::Editor::DataStorage::GetDataStorageFeature instead.
GetDebugGeometryForTile,"NAVIGATIONSYSTEM_API bool GetDebugGeometryForTile(FRecastDebugGeometry& OutGeometry, int32 TileIndex) const;",Use the version of this function that takes a FNavTileRef instead.
GetDebugGeometryForTile,"NAVIGATIONSYSTEM_API bool GetDebugGeometryForTile(FRecastDebugGeometry& OutGeometry, int32 TileIndex) const;",Use the version of the function that takes a FNavTileRef instead.
GetDebugPolyEdges,"NAVIGATIONSYSTEM_API void GetDebugPolyEdges(const dtMeshTile& Tile, bool bInternalEdges, bool bNavMeshEdges, TArray<FVector>& InternalEdgeVerts, TArray<FVector>& NavMeshEdgeVerts) const;",Use GetTilePolyEdges instead.
GetDefaultCompressionQuality,ENGINE_API int32 GetDefaultCompressionQuality() const;,Default Compression Quality has moved to SoundWave class defaults
GetDefaultTooltipForFunction,static FString GetDefaultTooltipForFunction(const UFunction* Function);,Moved to ObjectTools::GetDefaultTooltipForFunction.
GetDenyList,"const TMap<FString, FPermissionListOwners>& GetDenyList() const;",GetDenyList is deprecated. Use GetDenyListEntries instead.
GetDisplayPrimaryBlue,virtual FVector2d GetDisplayPrimaryBlue() const,"GetDisplayPrimaryBlue is deprecated, please use GetMasteringDisplayColorSpace instead."
GetDisplayPrimaryGreen,virtual FVector2d GetDisplayPrimaryGreen() const,"GetDisplayPrimaryGreen is deprecated, please use GetMasteringDisplayColorSpace instead."
GetDisplayPrimaryRed,virtual FVector2d GetDisplayPrimaryRed() const,"GetDisplayPrimaryRed is deprecated, please use GetMasteringDisplayColorSpace instead."
GetDuration,float GetDuration() const { return 0.f; },"Animation lengh no longer has a single, consistent length if there is timewarp."
GetDynamicRayTracingInstances,"virtual void GetDynamicRayTracingInstances(struct FRayTracingMaterialGatheringContext& Context, TArray<struct FRayTracingInstance>& OutRayTracingInstances) {}",Use FRayTracingInstanceCollector instead.
GetEditorSettings,LANDSCAPE_API FLandscapeEditorLayerSettings& GetEditorSettings() const;,"This property has been deprecated, please use the GetTargetLayerSettings instead"
GetEntityCollection,const FMassArchetypeEntityCollection& GetEntityCollection() const;,This function is now deprecated since FEntityCreationContext can contain more than a single collection now. Use GetEntityCollections instead.
GetExternalPackage,static UPackage* GetExternalPackage(const ISceneOutlinerTreeItem& TreeItem);,FSceneOutlinerHelpers::GetExternalPackage has been deprecated implement/use ISceneOutlinerTreeItem::GetPackageName instead
GetExternalPackageName,static FString GetExternalPackageName(const ISceneOutlinerTreeItem& TreeItem);,FSceneOutlinerHelpers::GetExternalPackageName has been deprecated implement/use ISceneOutlinerTreeItem::GetPackageName instead
GetForceRateImage,"FRDGTextureRef GetForceRateImage(FRDGBuilder& GraphBuilder, const FSceneViewFamily& ViewFamily, int RateIndex = 0,","This version of GetForceRateImage is deprecated, please use GetForceRateImage(FRDGBuilder& GraphBuilder, const FSceneViewFamily& ViewFamily, int RateIndex, bool bGetSoftwareImage) instead."
GetForceUpdateDynamicDataImmediately,bool GetForceUpdateDynamicDataImmediately() const { return true; },This is no longer relevant. Dynamic data is always updated immediately.
GetGamutToXYZMatrix,virtual FMatrix44d GetGamutToXYZMatrix() const,"GetGamutToXYZMatrix is deprecated, please use GetSourceColorSpace instead."
GetGlobalShaderMapDDCKey,extern ENGINE_API const FString& GetGlobalShaderMapDDCKey();,Use GetGlobalShaderMapDDCGuid
GetHasBeenSimplified,bool GetHasBeenSimplified() const;,This functionality has been removed. Use FSkeletalMeshLODInfo::bHasBeenSimplified instead.
GetHasBeenSimplifiedMemberName,static FName GetHasBeenSimplifiedMemberName(),This functionality has been removed. Use FSkeletalMeshLODInfo::bHasBeenSimplified instead.
GetInputHistory,TSharedPtr<Chaos::FBaseRewindHistory>& GetInputHistory() { return GetInputHistory_Internal(); },"Deprecated, use GetInputHistory_Internal() or GetInputHistory_External() instead"
GetInputsView,ENGINE_API virtual TArrayView<FExpressionInput*> GetInputsView();,Use FExpressionInputIterator instead or GetInput() directly.
GetInstantiatedMetaModifier,"ENGINE_API FCompositeNavModifier GetInstantiatedMetaModifier(const FNavAgentProperties* NavAgent, TWeakObjectPtr<UObject> WeakOwnerPtr) const;",Use the version taking a const reference instead.
GetIntegerValue,RENDERCORE_API int32 GetIntegerValue(FName Name) const;,"Accessing definition values via FShaderCompilerEnvironment is no longer allowed outside of the core shader system.\n""
						""Please use Get/SetCompileArgument mechanism for additional properties required by compilation."
GetIntegerValue,"RENDERCORE_API int32 GetIntegerValue(FShaderCompilerDefineNameCache& NameCache, int32 ResultIfNotFound = 0) const;","Accessing definition values via FShaderCompilerEnvironment is no longer allowed outside of the core shader system.\n""
						""Please use Get/SetCompileArgument mechanism for additional properties required by compilation."
GetKeys,"virtual void GetKeys(const FCurveEditor& CurveEditor, double MinTime, double MaxTime, double MinValue, double MaxValue, TArray<FKeyHandle>& OutKeyHandles) const",Implement the version that doesn't take the Curve Editor parameter.
GetLandscapeSplinesReservedLayer,LANDSCAPE_API struct FLandscapeLayer* GetLandscapeSplinesReservedLayer();,Use FindLayerOfType(ULandscapeEditLayerSplines::StaticClass()) instead
GetLandscapeSplinesReservedLayer,LANDSCAPE_API const struct FLandscapeLayer* GetLandscapeSplinesReservedLayer() const;,Use FindLayerOfType(ULandscapeEditLayerSplines::StaticClass()) instead
GetLastError,virtual FText GetLastError() const override { return FText::GetEmpty(); },Deprecated for thread safety reasons.
GetLastError,virtual FText GetLastError() const = 0;,Deprecated for thread safety reasons. Functions which populated this value now take an optional FText* out parameter.
GetLastSubmitTime,double GetLastSubmitTime() { return 0.0; },GetLastSubmitTime is no longer used
GetLayer,LANDSCAPE_API FLandscapeLayer* GetLayer(int32 InLayerIndex) { return nullptr; },"This has moved to private (GetLayerInternal), use the appropriate setters to mutate the edit layer"
GetLayer,LANDSCAPE_API const FLandscapeLayer* GetLayer(int32 InLayerIndex) const;,Use GetLayerConst
GetLayer,LANDSCAPE_API const FLandscapeLayer* GetLayer(const FGuid& InLayerGuid) const;,Use GetLayerConst
GetLayer,LANDSCAPE_API const FLandscapeLayer* GetLayer(const FName& InLayerName) const;,Use GetLayerConst
GetLayerBufferOffset,virtual uint32 GetLayerBufferOffset(uint32 LayerIndex) const,FRHIRayTracingScene layers are deprecated. Create one FRHIRayTracingScene per layer instead.
GetLayerEditorSettings,LANDSCAPE_API FLandscapeTargetLayerSettings& GetLayerEditorSettings(ULandscapeLayerInfoObject* LayerInfo) const;,"This property has been deprecated, please use the GetTargetLayerSettings(ULandscapeLayerInfoObject* LayerInfo) instead"
GetLODInfoArray,virtual TArray<FSkeletalMeshLODInfo>& GetLODInfoArray() override,Use GetLODInfo and GetLODNum instead.
GetLODInfoArray,virtual const TArray<FSkeletalMeshLODInfo>& GetLODInfoArray() const override,Use GetLODInfo and GetLODNum instead.
GetLODInfoArray,ENGINE_API virtual TArray<FSkeletalMeshLODInfo>& GetLODInfoArray(),Use GetLODInfo and GetLODNum instead.
GetLODInfoArray,ENGINE_API virtual const TArray<FSkeletalMeshLODInfo>& GetLODInfoArray() const,Use GetLODInfo and GetLODNum instead.
GetMapTests,"virtual void GetMapTests(bool bEditorOnlyTests, TArray<FString>& OutBeautifiedNames, TArray<FString>& OutTestCommands, TArray<FString>& OutTestMapAssets) const = 0;",GetMapTests() with four parameters has been deprecated.
GetMaterialShaderMapDDCKey,extern ENGINE_API const FString& GetMaterialShaderMapDDCKey();,Use GetMaterialShaderMapDDCGuid
GetMaterialShaderMapKeyString,"inline FString GetMaterialShaderMapKeyString(const FMaterialShaderMapId& ShaderMapId, EShaderPlatform Platform, bool bIncludeKeyStringShaderDependencies = true)",GetMaterialShaderMapKeyString now requires passing an FMaterialShaderParameters instance as input.
GetMaximumCompressedSize,"CORE_API static int32 GetMaximumCompressedSize(FName FormatName, int32 UncompressedSize, ECompressionFlags Flags = COMPRESS_NoFlags, int32 CompressionData = 0);",Use the 64 bit version
GetMemoryMappedBulkDataArchive,FFileRegionMemoryWriter& GetMemoryMappedBulkDataArchive(),Use the overload that takes a FBulkDataCookedIndex
GetMotionControllerData,"virtual void GetMotionControllerData(UObject* WorldContext, const EControllerHand Hand, FXRMotionControllerData& MotionControllerData) = 0;",Deprecated along with UHeadMountedDisplayFunctionLibrary::GetMotionControllerData
GetMutableDataForObject,NAVIGATIONSYSTEM_API FNavigationRelevantData* GetMutableDataForObject(const UObject& Object);,Use GetMutableDataForElement instead.
GetMutableDataForObject,NAVIGATIONSYSTEM_API FNavigationRelevantData* GetMutableDataForObject(const UObject& Object);,Use GetMutableDataForElement instead.
GetMutableDataStorage,TYPEDELEMENTFRAMEWORK_API IEditorDataStorageProvider* GetMutableDataStorage();,Function has moved to modular features. Use UE::Editor::DataStorage::GetMutableDataStorageFeature instead.
GetMutableDataStorageCompatibility,TYPEDELEMENTFRAMEWORK_API IEditorDataStorageCompatibilityProvider* GetMutableDataStorageCompatibility();,Function has moved to modular features. Use UE::Editor::DataStorage::GetMutableDataStorageFeature instead.
GetMutableDataStorageUi,TYPEDELEMENTFRAMEWORK_API IEditorDataStorageUiProvider* GetMutableDataStorageUi();,Function has moved to modular features. Use UE::Editor::DataStorage::GetMutableDataStorageFeature instead.
GetNavMeshTileBounds,NAVIGATIONSYSTEM_API FBox GetNavMeshTileBounds(int32 TileIndex) const;,Use the version of this function on ARecastNavMesh that takes a FNavTileRef instead.
GetNavMeshTileBounds,NAVIGATIONSYSTEM_API FBox GetNavMeshTileBounds(int32 TileIndex) const;,Use the version of this function that takes a FNavTileRef instead.
GetNavmeshTileResolution,"NAVIGATIONSYSTEM_API bool GetNavmeshTileResolution(int32 TileIndex, ENavigationDataResolution& OutResolution) const;",Use the version of this function that takes a FNavTileRef instead.
GetNavMeshTilesAt,"NAVIGATIONSYSTEM_API void GetNavMeshTilesAt(int32 TileX, int32 TileY, TArray<int32>& Indices) const;",Use the version of this function on ARecastNavMesh that takes an array of FNavTileRefs instead.
GetNavMeshTilesAt,"NAVIGATIONSYSTEM_API void GetNavMeshTilesAt(int32 TileX, int32 TileY, TArray<int32>& Indices) const;",Use the version of this function that takes an array of FNavTileRefs instead.
GetNavMeshTilesIn,"NAVIGATIONSYSTEM_API void GetNavMeshTilesIn(const TArray<FBox>& InclusionBounds, TArray<int32>& Indices) const;",Use the version of the function that takes an array of FNavTileRefs instead
GetNavMeshTileXY,"NAVIGATIONSYSTEM_API bool GetNavMeshTileXY(int32 TileIndex, int32& OutX, int32& OutY, int32& OutLayer) const;",Use the version of this function on ARecastNavMesh that takes a FNavTileRef instead.
GetNavMeshTileXY,"NAVIGATIONSYSTEM_API bool GetNavMeshTileXY(int32 TileIndex, int32& OutX, int32& OutY, int32& Layer) const;",Use the version of this function that takes a FNavTileRef instead.
GetNavOctreeElementData,"NAVIGATIONSYSTEM_API bool GetNavOctreeElementData(const UObject& NodeOwner, int32& DirtyFlags, FBox& DirtyBounds);",Use the version taking ENavigationDirtyFlag& and FNavigationElementHandle as parameter instead.
GetNavOctreeElementData,"NAVIGATIONSYSTEM_API bool GetNavOctreeElementData(const UObject& NodeOwner, int32& DirtyFlags, FBox& DirtyBounds);",Use the version taking FNavigationElement instead.
GetNextRegistrationSerialNumber,static int32 GetNextRegistrationSerialNumber() { return -1; },GetNextRegistrationSerialNumber is no longer used
GetNonSpatiallyLoadedCells,"ENGINE_API void GetNonSpatiallyLoadedCells(TSet<const UWorldPartitionRuntimeCell*>& OutActivateCells, TSet<const UWorldPartitionRuntimeCell*>& OutLoadCells) const {}",Use version that takes FWorldPartitionStreamingContext instead.
GetObjectsNavOctreeId,NAVIGATIONSYSTEM_API const FOctreeElementId2* GetObjectsNavOctreeId(const UObject& Object) const;,Use GetNavOctreeIdForElement instead.
GetObjectsNavOctreeId,NAVIGATIONSYSTEM_API const FOctreeElementId2* GetObjectsNavOctreeId(const UObject& Object) const;,Use GetNavOctreeIdForElement instead.
GetOptionalBulkDataArchive,FFileRegionMemoryWriter& GetOptionalBulkDataArchive(),Use the overload that takes a FBulkDataCookedIndex
GetOrCreateConstSharedFragmentByHash,"const FConstSharedStruct& GetOrCreateConstSharedFragmentByHash(const uint32 Hash, const T& Fragment)",This method will no longer be exposed. Use GetOrCreateConstSharedFragment instead.
GetOrCreateMetadataBufferSRV,virtual FRHIShaderResourceView* GetOrCreateMetadataBufferSRV(FRHICommandListImmediate& RHICmdList),Use GetOrCreateInlineBufferSRV on the FRHIShaderBindingTable instead of the Scene
GetOrCreateSharedFragmentByHash,"const FSharedStruct& GetOrCreateSharedFragmentByHash(const uint32 Hash, TArgs&&... InArgs)",This method will no longer be exposed. Use GetOrCreateSharedFragment instead.
GetOutdatedProxies,"LANDSCAPE_API TArray<ALandscapeProxy*> GetOutdatedProxies(UE::Landscape::EOutdatedDataFlags InMatchingOutdatedDataFlags, bool bInMustMatchAllFlags) const;",Use GetOutdatedProxyDetails
GetOwner,ENGINE_API const UObject* GetOwner() const;,Use SourceElement instead.
GetOwner,FORCEINLINE UObject* GetOwner(bool bEvenIfPendingKill = false) const,Use GetSourceElement instead.
GetOwnerPtr,ENGINE_API TWeakObjectPtr<UObject> GetOwnerPtr() const;,Use SourceElement instead.
GetPayloadActivityInfo,virtual void GetPayloadActivityInfo(GetPayloadActivityInfoFuncRef Func) const,Use IVirtualizationSystem::GetBackendStatistics instead
GetPinnedItemsVisiblity,SLATE_API EVisibility GetPinnedItemsVisiblity() const;,The Pinned items visibility is no more an attribute.
GetPinToRemove,virtual UE::Dataflow::FPin GetPinToRemove() const { return UE::Dataflow::FPin::InvalidPin; },Use GetPinsToRemove method instead
GetPlatformOfflineCompilerPath,MATERIALEDITOR_API static FString GetPlatformOfflineCompilerPath(const EShaderPlatform ShaderPlatform);,GetPlatformOfflineCompilerPath is no longer used; Use GetPlatformOfflineCompilerSettings instead.
GetPlayer,MOVIESCENE_API IMovieScenePlayer* GetPlayer() const;,The player interface is now optional and will be deprecated in a future relase. Please use FPlayerIndexPlaybackCapability::GetPlayer()
GetPlayerIndex,MOVIESCENE_API uint16 GetPlayerIndex() const;,The player interface is now optional and will be deprecated in a future relase. Please use FPlayerIndexPlaybackCapability::GetPlayerIndex()
GetPolysInTile,"NAVIGATIONSYSTEM_API bool GetPolysInTile(int32 TileIndex, TArray<FNavPoly>& Polys) const;",Use the version of this function in ARecastNavMesh that takes a FNavTileRef instead.
GetPolysInTile,"NAVIGATIONSYSTEM_API bool GetPolysInTile(int32 TileIndex, TArray<FNavPoly>& Polys) const;",Use the version of this function that takes a FNavTileRef instead.
GetPropertyUpdatedWidget,"PROPERTYEDITOR_API virtual TSharedPtr<FPropertyUpdatedWidgetBuilder> GetPropertyUpdatedWidget(FResetToDefault ResetToDefault, bool bIsCategoryUpdateWidget = false, FName InCategoryObjectName = NAME_None);",Use ConstructPropertyUpdatedWidgetBuilder
GetPropertyUpdatedWidget,"PROPERTYEDITOR_API virtual TSharedPtr<FPropertyUpdatedWidgetBuilder> GetPropertyUpdatedWidget(FResetToDefault ResetToDefault, TSharedRef<FEditPropertyChain> InEditorPropertyChain, FName InCategoryObjectName);",Use ConstructPropertyUpdatedWidgetBuilder
GetRange,TRange<FFrameTime> GetRange() const,Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
GetRawData,"ENGINE_API static bool GetRawData(UTextureRenderTarget2D* TexRT, TArray64<uint8>& RawData);",Use GetRenderTargetImage
GetReadAccess,const TArray<uint8>& GetReadAccess() const,Use GetReadView
GetReferencedUniformBufferNames,"inline const TSet<const TCHAR*, TStringPointerSetKeyFuncs_DEPRECATED<const TCHAR*>>& GetReferencedUniformBufferNames() const","GetReferencedUniformBufferNames is deprecated, use GetReferencedUniformBuffers instead"
GetReferencedUniformBufferNames,"inline const TSet<const TCHAR*, TStringPointerSetKeyFuncs_DEPRECATED<const TCHAR*>>& GetReferencedUniformBufferNames() const",GetReferencedUniformBufferNames is deprecated; call GetReferencedUniformBuffers instead.
GetRegistrationSerialNumber,int32 GetRegistrationSerialNumber() const { return -1; },GetRegistrationSerialNumber is no longer used.
GetRenderInterpDebugDraw,static bool GetRenderInterpDebugDraw(),"Deprecated, use RenderInterpolationCVars::bRenderInterpDebugDraw"
GetRenderInterpErrorCorrectionDuration,static float GetRenderInterpErrorCorrectionDuration(),"Deprecated, use RenderInterpolationCVars::RenderInterpErrorCorrectionDuration"
GetRenderInterpErrorDirectionalDecayMultiplier,static float GetRenderInterpErrorDirectionalDecayMultiplier(),"Deprecated, use RenderInterpolationCVars::RenderInterpErrorDirectionalDecayMultiplier"
GetRenderInterpErrorVelocitySmoothingDuration,static float GetRenderInterpErrorVelocitySmoothingDuration(),"Deprecated, use RenderInterpolationCVars::RenderInterpErrorVelocitySmoothingDuration"
GetRenderInterpMaximumErrorCorrectionBeforeSnapping,static float GetRenderInterpMaximumErrorCorrectionBeforeSnapping(),"Deprecated, use RenderInterpolationCVars::RenderInterpMaximumErrorCorrectionBeforeSnapping"
GetResimulationErrorThreshold,uint32 GetResimulationErrorThreshold(uint32 DefaultValue) { return GetResimulationErrorPositionThreshold(DefaultValue); },"GetResimulationErrorThreshold has been renamed, please use GetResimulationErrorPositionThreshold."
GetResimulationErrorThreshold,virtual float GetResimulationErrorThreshold() const,"GetResimulationErrorThreshold has been renamed, please use GetResimulationErrorPositionThreshold."
GetRHIPipelines,inline TArrayView<const ERHIPipeline> GetRHIPipelines(),GetRHIPipelines is deprecated. Prefer ranged-for iteration over pipelines using 'for (ERHIPipeline Pipeline : MakeFlagsRange(Pipelines))'.
GetSerializeContext,virtual FUObjectSerializeContext* GetSerializeContext() { return nullptr; },GetSerializeContext is not supported. Use FUObjectThreadContext::Get().GetSerializeContext().
GetSerializeContext,COREUOBJECT_API virtual FUObjectSerializeContext* GetSerializeContext() override;,GetSerializeContext is not supported. Use FUObjectThreadContext::Get().GetSerializeContext().
GetSerializeContext,FUObjectSerializeContext* GetSerializeContext() override;,GetSerializeContext is not supported. Use FUObjectThreadContext::Get().GetSerializeContext().
GetShaderStatistics,inline const FShaderStatisticMap& GetShaderStatistics() const,GetShaderStatistics which returns a reference to the stat map is deprecated. Shader Stats can be accessed on the editor only data on the FShaderMapResourceCode object.
GetShaderStatisticsMapForShader,"RENDERCORE_API const FShader::FShaderStatisticMap GetShaderStatisticsMapForShader(const FShaderMapBase& InShaderMap, FShaderType* ShaderType) const",GetShaderStatistics which returns a reference to the stat map is deprecated. Please use the function that returns a non-ref.
GetSharedFragmentData,T& GetSharedFragmentData() const,Using GetSharedFragmentDataPtr with const shared fragments is deprecated. Use GetConstSharedFragmentData instead
GetSharedFragmentDataPtr,T* GetSharedFragmentDataPtr() const,Using GetSharedFragmentDataPtr with const shared fragments is deprecated. Use GetConstSharedFragmentDataPtr instead
GetSlotGroupInertializationRequestMap,"ENGINE_API TMap<FName, UE::Anim::FSlotInertializationRequest>& GetSlotGroupInertializationRequestMap();",Please use GetSlotGroupInertializationRequestDataMap instead.
GetSlotInertializationRequest,"ENGINE_API bool GetSlotInertializationRequest(const FName& SlotName, UE::Anim::FSlotInertializationRequest& OutRequest);",Please use GetSlotInertializationRequestData instead.
GetSolverName,"FString GetSolverName(int32 SolverID) { return TEXT(""""); }",Please use the GetSolverFName instead
GetSolverName_AssumedLocked,"FString GetSolverName_AssumedLocked(int32 SolverID) { return TEXT(""""); }",Please use the GetSolverFName_AssumedLocked instead
GetSoundBufferForResourceID,ENGINE_API FSoundBuffer* GetSoundBufferForResourceID(uint32 ResourceID);,This is no longer used.  Existing calls may be deleted
GetSSProfilesPreIntegratedTextureWithFallback,ENGINE_API FRHITexture* GetSSProfilesPreIntegratedTextureWithFallback();,"Please, use the name space SubsurfaceProfile::"
GetStateHistory,TSharedPtr<Chaos::FBaseRewindHistory>& GetStateHistory() { return GetStateHistory_Internal(); },"Deprecated, use GetStateHistory_Internal() or GetStateHistory_External() instead"
GetStreamingBounds,ENGINE_API FBox GetStreamingBounds() const;,Use the override that takes both Runtime and Editor boxes
GetSubsurfaceProfileId,ENGINE_API float GetSubsurfaceProfileId(const USubsurfaceProfile* In);,"Please, use the name space SubsurfaceProfile::"
GetSubsurfaceProfileParameterName,ENGINE_API FName GetSubsurfaceProfileParameterName();,"Please, use the name space SubsurfaceProfile::"
GetSubsurfaceProfileTexture,ENGINE_API FRHITexture* GetSubsurfaceProfileTexture();,"Please, use the name space SubsurfaceProfile::"
GetSubsurfaceProfileTextureWithFallback,ENGINE_API FRHITexture* GetSubsurfaceProfileTextureWithFallback();,"Please, use the name space SubsurfaceProfile::"
GetTagToAssetDatasMap,"const TMap<FName, const TArray<const FAssetData*>> GetTagToAssetDatasMap() const;",Use EnumerateTags or EnumerateTagToAssetDatas instead.
GetThumbnailOverlay,virtual TSharedPtr<class SWidget> GetThumbnailOverlay(const FAssetData& AssetData) const = 0;,"Convert the Action class over to the Definition system and use the new GetThumbnailActionOverlay, see UAssetDefinition for more information"
GetTiles,"NAVIGATIONSYSTEM_API void GetTiles(const FPImplRecastNavMesh* NavMeshImpl, const TArray<int32>& TileIndices, const EGatherTilesCopyMode CopyMode, const bool bMarkAsAttached = true);",Use the version of this function that takes an array of FNavTileRefs instead.
GetTilesBounds,"NAVIGATIONSYSTEM_API void GetTilesBounds(const FPImplRecastNavMesh& NavMeshImpl, const TArray<int32>& TileIndices, FBox& OutBounds) const;",Use the version of this function that takes an array of FNavTileRefs instead.
GetTimeScale,MOVIESCENE_API float GetTimeScale() const;,Transforms no longer have a constant time scale.
GetTrackFilterNames,virtual TArray<FText> GetTrackFilterNames() const = 0;,GetTrackFilterNames() has been deprecated. Use GetFilterInterface()->GetFilterDisplayNames() instead.
GetUsedPersistentAuxiliary,static CORE_API SIZE_T GetUsedPersistentAuxiliary();,Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
GetUserFacingFunctionName,"static FText GetUserFacingFunctionName(const UFunction* Function, ENodeTitleType::Type NodeTitleType = ENodeTitleType::EditableTitle);",Moved to ObjectTools::GetUserFacingFunctionName.
GetVertexFactoryUserData,"virtual const FSkinBatchVertexFactoryUserData* GetVertexFactoryUserData(const int32 LODIndex, int32 ChunkIdx, ESkinVertexFactoryMode VFMode) const { return nullptr; }",This method is no longer in use
GetViewportSettings,"virtual void GetViewportSettings(TMap<FViewportClient*, EMovieSceneViewportParams>& ViewportParamsMap) const {}",Viewport settings management has moved to FViewportSettingsPlaybackCapability
GetWhitePoint,virtual FVector2d GetWhitePoint() const,"GetWhitePoint is deprecated, please use GetSourceColorSpace instead."
GIsEditorLoadingPackage,extern CORE_API FIsEditorLoadingPackage GIsEditorLoadingPackage;,Use UE::GetIsEditorLoadingPackage() and UE::SetIsEditorLoadingPackage() instead.
GJKDistanceInitialV,"TVector<T, 3> GJKDistanceInitialV(const TGeometryA& A, const TGeometryB& B, const TRigidTransform<T, 3>& BToATM)","Use GJKDistanceInitialVFromDirection if possible, or GJKDistanceInitialVFromRelativeTransform if original behaviour was required"
GLevelEditorModeToolsIsValid,UNREALED_API bool GLevelEditorModeToolsIsValid();,Checking the validity of the global mode manager is unnecessary. Instead use FLevelEditorModule::OnLevelEditorCreated to gate the access on the global mode manager.
GMaybeUnreachableObjectFlag,extern COREUOBJECT_API EInternalObjectFlags GMaybeUnreachableObjectFlag;,GMaybeUnreachableObjectFlag should no longer be used.
GPathTracingDenoiserPlugin,extern RENDERER_API TUniquePtr<UE::Renderer::Private::IPathTracingDenoiser> GPathTracingDenoiserPlugin;,GPathTracingDenoiserPlugin is deprecated. Use RegisterSpatialDenoiser/RegisterSpatialTemporalDenoiser to register
GPathTracingSpatialTemporalDenoiserPlugin,extern RENDERER_API TUniquePtr<UE::Renderer::Private::IPathTracingSpatialTemporalDenoiser> GPathTracingSpatialTemporalDenoiserPlugin;,GPathTracingSpatialTemporalDenoiserPlugin is deprecated. Use RegisterSpatialDenoiser/RegisterSpatialTemporalDenoiser to register
GPlayInEditorID,extern CORE_API FPlayInEditorID GPlayInEditorID;,Use UE::GetPlayInEditorID() and UE::SetPlayInEditorID() instead.
GPUInstances,TArray<FRayTracingGPUInstance> GPUInstances;,GPUInstances no longer supported. Use GPUSceneInstances instead.
GReachableObjectFlag,extern COREUOBJECT_API EInternalObjectFlags GReachableObjectFlag;,GUnreachableObjectFlag should no longer be used.
Guid,FGuid Guid;,"Will be made private in 5.7, use Get/Set methods instead."
GUnreachableObjectFlag,extern COREUOBJECT_API EInternalObjectFlags GUnreachableObjectFlag;,GUnreachableObjectFlag should no longer be used. Use Object->IsUnreachable() instead.
GVertexColorViewMode,extern ENGINE_API EVertexColorViewMode::Type GVertexColorViewMode;,Use MeshPaintVisualize::SetChannelMode() instead.
GVertexViewModeOverrideOwnerName,extern ENGINE_API FString GVertexViewModeOverrideOwnerName;,We no longer use names to enable visualization.
GVertexViewModeOverrideTexture,extern ENGINE_API TWeakObjectPtr<UTexture> GVertexViewModeOverrideTexture;,Use MeshPaintVisualize::SetTextureAsset() instead.
GVertexViewModeOverrideUVChannel,extern ENGINE_API float GVertexViewModeOverrideUVChannel;,Use MeshPaintVisualize::SetTextureCoordinateIndex() instead.
HasAllEnumFlags,UMG_API bool HasAllEnumFlags(const FWidgetStateBitfield& InBitfield) const;,FWidgetStateBitfield currently no longer supports enum states
HasAnyEnumFlags,UMG_API bool HasAnyEnumFlags(const FWidgetStateBitfield& InBitfield) const;,FWidgetStateBitfield currently no longer supports enum states
HasEmptyUsedEnumStates,UMG_API bool HasEmptyUsedEnumStates() const;,FWidgetStateBitfield currently no longer supports enum states
HasEnumStates,UMG_API bool HasEnumStates() const;,FWidgetStateBitfield currently no longer supports enum states
HasExactFragmentTypesMatch,FORCEINLINE bool HasExactFragmentTypesMatch(const FMassSharedFragmentBitSet& InSharedFragmentBitSet) const,HasExactFragmentTypesMatch is deprecated. Use HasExactSharedFragmentTypesMatch or the two-parameter version of HasExactFragmentTypesMatch.
HasHadBulkDataCleared,FORCEINLINE bool HasHadBulkDataCleared() const { return false; },Remove call to HasHadBulkDataCleared.
HashObject,FORCEINLINE static uint32 HashObject(const UObject& Object),This method is no longer used by the navigation system.
HashObject,static NAVIGATIONSYSTEM_API uint32 HashObject(const UObject& Object);,This method will no be longer be used by the navigation system.
HashObject,NAVIGATIONSYSTEM_API static uint32 HashObject(const UObject& Object);,This method is no longer used by the navigation system.
HashShaderFileWithIncludes,"extern RENDERCORE_API void HashShaderFileWithIncludes(FArchive& HashingArchive, const TCHAR* VirtualFilePath, const FString& FileContents, EShaderPlatform ShaderPlatform, bool bOnlyHashIncludedFiles);",HashShaderFileWithIncludes is no longer used by the shader compilation system and so no longer supported.
HasLayer,bool HasLayer(ULandscapeLayerInfoObject* LayerInfoObject) const;,This version of HasLayer is deprecated.  Use HasTargetLayer(ULandscapeLayerInfoObject* LayerInfoObject) instead.
HasObjectsNavOctreeId,NAVIGATIONSYSTEM_API bool HasObjectsNavOctreeId(const UObject& Object) const;,Use HasElementNavOctreeId instead.
HasPendingObjectNavOctreeId,NAVIGATIONSYSTEM_API bool HasPendingObjectNavOctreeId(UObject& Object) const;,Use HasPendingUpdateForElement instead.
HasPendingObjectNavOctreeId,NAVIGATIONSYSTEM_API bool HasPendingObjectNavOctreeId(UObject* Object) const;,Use HasPendingUpdateForElement instead.
HideAddComponentButton,virtual bool HideAddComponentButton() const { return false; },Use version with ObjectContext instead
HideBlueprintButtons,virtual bool HideBlueprintButtons() const { return false; },Use version with ObjectContext instead
HideComponentsFilterBox,virtual bool HideComponentsFilterBox() const { return false; },Use version with ObjectContext instead
HideComponentsTree,virtual bool HideComponentsTree() const { return false; },Use version with ObjectContext instead
Identical,"UNREALED_API bool Identical(const FResolvedProperty& AProp, const FResolvedProperty& BProp, const UObject* OwningOuterA, const UObject* OwningOuterB, const FPropertySoftPath& RootPath, TArray<FPropertySoftPath>& DifferingProperties);",Use version with FDiffParameters instead.
ILocatorEditor,typedef ILocatorFragmentEditor ILocatorEditor;,Please use ILocatorFragmentEditor
Import,"LANDSCAPE_API void Import(const FGuid& InGuid, int32 InMinX, int32 InMinY, int32 InMaxX, int32 InMaxY, int32 InNumSubsections, int32 InSubsectionSizeQuads, const TMap<FGuid, TArray<uint16>>& InImportHeightData,",Use the new method prototype which takes a TArrayView parameter for import layers
ImportEntity,"MOVIESCENE_API void ImportEntity(UMovieSceneEntitySystemLinker* Linker, const FEntityImportSequenceParams& ImportParams, const FMovieSceneEntityComponentField* EntityField, const FMovieSceneEvaluationFieldEntityQuery& Query);",Please call the version that takes OutPerTickConditionalEntities and ConditionResultCache
INDEX_NONE,uint32 PassthroughOffset = INDEX_NONE;,Use PassthroughKey instead
INDEX_NONE,uint32 OwnerUniqueId = INDEX_NONE;,ID no longer used.
InitializeClothAsset,"virtual void InitializeClothAsset(UObject* ClothAsset, const FDatasmithCloth& DatasmithCloth) const",The experimental Cloth importer is no longer supported.
InitializeClothComponent,"virtual void InitializeClothComponent(USceneComponent* ClothComponent, UObject* ClothAsset, USceneComponent* RootComponent) const",The experimental Cloth importer is no longer supported.
InitializeFrom,void InitializeFrom(UInstancedStaticMeshComponent* InComponent) { InitializeFromInstancedStaticMeshComponent(InComponent); },Use InitializeFromInstancedStaticMeshComponent instead.
InitializeFrom,void InitializeFrom(const UPrimitiveComponent* InComponent) { InitializeFromPrimitiveComponent(InComponent); },Use InitializeFromPrimitiveComponent instead.
InitializeFrom,void InitializeFrom(const UStaticMeshComponent* InComponent) { InitializeFromStaticMeshComponent(InComponent); },Use InitializeFromStaticMeshComponent instead.
InitResources,"ENGINE_API void InitResources(const FStaticMeshLODResources& LodResources, uint32 LODIndex, const UStaticMesh* Parent)",Provide FStaticMeshVertexBuffers instead of FStaticMeshLODResources
InitVertexFactory,"ENGINE_API void InitVertexFactory(const FStaticMeshLODResources& LodResources, FLocalVertexFactory& InOutVertexFactory, uint32 LODIndex, const UStaticMesh* InParentMesh, bool bInOverrideColorVertexBuffer)",Provide FStaticMeshVertexBuffers instead of FStaticMeshLODResources
InjectInputs_External,"virtual void InjectInputs_External(int32 PhysicsStep, int32 NumSteps) {}",This callback was never called. Instead look at either ISimCallbackObject::ProcessInputs_External or FNetworkPhysicsCallback::InjectInputsExternal.
Inputs,"TMap< int, FDataflowInput* > Inputs;",Inputs type has changed and has been made private
InstanceGPUTransformsSRV,FShaderResourceViewRHIRef InstanceGPUTransformsSRV;,InstanceGPUTransformsSRV has been deprecated. GPU Scene should be used instead.
InstanceIndex,uint32 InstanceIndex;,Provide RayTracingGeometry and SBTSegmentIndex instead of InstanceIndex
InvalidateCachedData,MOVIESCENE_API void InvalidateCachedData(TSharedRef<const FSharedPlaybackState> SharedPlaybackState);,Please use the method that takes a reason parameter.
InvalidWarpCount,MOVIESCENE_API static const uint32 InvalidWarpCount;,Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
InverseFromAllFirstLoops,MOVIESCENE_API FMovieSceneSequenceTransform InverseFromAllFirstLoops() const;,Please use Inverse()
InverseFromLoop,MOVIESCENE_API FMovieSceneSequenceTransform InverseFromLoop(const FMovieSceneWarpCounter& LoopCounter) const;,Please use Inverse()
InverseFromLoop,FMovieSceneSequenceTransform InverseFromLoop(const TArrayView<const FFrameTime>& Breadcrumbs) const;,Please use Inverse()
InverseFromLoop,MOVIESCENE_API FMovieSceneSequenceTransform InverseFromLoop(const TArrayView<const uint32>& LoopCounts) const;,Please use Inverse()
InverseFromWarp,FMovieSceneNestedSequenceTransform InverseFromWarp(uint32 WarpCount) const,Please use Inverse()
InverseFromWarp,FMovieSceneTimeTransform InverseFromWarp(uint32 WarpCount) const;,Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
InverseLinearOnly,FMovieSceneNestedSequenceTransform InverseLinearOnly() const,Please use Inverse()
InverseNoLooping,MOVIESCENE_API FMovieSceneSequenceTransform InverseNoLooping() const;,Please use Inverse()
IRepChangedPropertyTracker,IRepChangedPropertyTracker() { },Will be removed or renamed and used to pass paramters.
IsAllowedToTick,virtual bool IsAllowedToTick() const { return true; },Use IsTickable for conditional ticks and SetTickableTickType to change the tick type after initial registration
IsAsyncLoadingComplete,COREUOBJECT_API bool IsAsyncLoadingComplete() const;,No longer provides any functionality (assume that this will always return true
IsAttachedToLinker,bool IsAttachedToLinker() const { return IsValid(); },"Runners are now owned by linkers, and always attached"
IsBulkDataLoaded,FORCEINLINE bool IsBulkDataLoaded() const { return true; },"IsBulkDataLoaded was broken, do not use"
IsCachePlaying,bool IsCachePlaying(),No longer used and underlying variable is deprecated
IsCacheRecording,bool IsCacheRecording(),No longer used and underlying variable is deprecated
IsCalledFunctionFromInterface,bool IsCalledFunctionFromInterface(UEdGraphNode* Node),IsCalledFunctionFromInterface is deprecated
IsCalledFunctionPure,bool IsCalledFunctionPure(UEdGraphNode* Node),IsCalledFunctionPure is deprecated
IsCurrentPlatformUsingStreamCaching,static ENGINE_API bool IsCurrentPlatformUsingStreamCaching() { return true; };,"this always returns true, no longer needed."
IsDestructionThreadSafe,COREUOBJECT_API virtual bool IsDestructionThreadSafe() const;,Multithreaded destruction of UObjects is no longer supported.
IsDiscard,bool IsDiscard() const,Discard aliasing ops are no longer necessary.
IsDumpingDraws,static bool IsDumpingDraws() { return false; },This path is no longer supported.
IsEditingLayerReservedForSplines,LANDSCAPE_API bool IsEditingLayerReservedForSplines() const;,Use FindLayerOfType(ULandscapeEditLayerSplines::StaticClass()).Guid == GetEditingLayer() instead
IsHardwareVRSEnabled,bool IsHardwareVRSEnabled() { return IsHardwareVRSEnabledForFrame(); };,"IsHardwareVRSEnabled() is deprecated, please use IsHardwareVRSEnabledForFrame() instead."
IsHostLittleEndian,SIGNALPROCESSING_API constexpr bool IsHostLittleEndian(),Big Endian platforms are no longer supported.
IsInBrushStroke,virtual bool IsInBrushStroke() const { return bInBrushStroke; },The IsInBrushStroke function is deprecated. This will now always be true in OnBeginDrag/OnUpdateDrag/OnEndDrag.
IsInGarbageCollectorThread,COREUOBJECT_API bool IsInGarbageCollectorThread();,IsInGarbageCollectorThread() is now equivalent to calling IsInGameThread()
IsLazyGathering,NAVIGATIONSYSTEM_API bool IsLazyGathering(const INavRelevantInterface& ChildNavInterface) const;,Use the overloaded version with FNavigationElement instead.
IsLoadedByEditorPropertiesOnly,bool IsLoadedByEditorPropertiesOnly() const { return false; },No longer used; skiponlyeditoronly is used instead and tracks editoronly references via savepackage results.
IsLooping,bool IsLooping() const,Please update your code to check for IsLinear()
IsLooping,bool IsLooping() const;,This function is no longer supported. Please use !IsLinear()
IsManagedStreamingSoundSource,virtual bool IsManagedStreamingSoundSource(const FSoundSource* SoundSource) const { LogWarning(); return false; },Use These methods are no longer used (removing the unused legacy streaming manager)
IsManagedStreamingSoundWave,virtual bool IsManagedStreamingSoundWave(const FSoundWaveProxyPtr&  SoundWave) const { LogWarning(); return false; },Use These methods are no longer used (removing the unused legacy streaming manager)
IsMaybeUnreachable,COREUOBJECT_API bool IsMaybeUnreachable() const;,IsMaybeUnreachable() can only be used by the garbage collector.
IsOneHeadsetEachProcess,bool IsOneHeadsetEachProcess() const,Deprecated. Use IsHMDForPrimaryProcessOnly function instead
IsPersistentAuxiliaryActive,static CORE_API bool IsPersistentAuxiliaryActive();,Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
IsPowerOfTwo,ENGINE_API bool IsPowerOfTwo(int32 BlockIndex = 0) const { return IsBlockPowerOfTwo(BlockIndex); },"Prefer AreAllBlocksPowerOfTwo, or IsBlockPowerOfTwo if you really only want one block"
IsRHIThreadActive,static inline bool IsRHIThreadActive(),FRHICommandListExecutor::IsRHIThreadActive() is deprecated. Use FRHICommandListExecutor::AreRHITasksActive() instead.
IsRHIThreadCompletelyFlushed,static inline bool IsRHIThreadCompletelyFlushed(),FRHICommandListExecutor::IsRHIThreadCompletelyFlushed() is deprecated. Use FRHICommandListExecutor::AreRHITasksActive() instead.
IsSoftwareVRSEnabled,bool IsSoftwareVRSEnabled() { return IsSoftwareVRSEnabledForFrame(); };,"IsSoftwareVRSEnabled() is deprecated, please use IsSoftwareVRSEnabledForFrame() instead."
IsStreamingInProgress,virtual bool IsStreamingInProgress(const FSoundWaveProxyPtr&  SoundWave) { LogWarning(); return false; },Use These methods are no longer used (removing the unused legacy streaming manager)
IsTrackFilterEnabled,virtual bool IsTrackFilterEnabled(const FText& InTrackFilterName) const = 0;,IsTrackFilterEnabled() has been deprecated. Use GetFilterInterface()->IsFilterActiveByDisplayName() instead.
IsValid,bool IsValid() const { return End > Start; },Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
LastModifiedTimestamp,UE::Dataflow::FTimestamp LastModifiedTimestamp;,"Will be made private in 5.7, use Get/Set methods instead."
LastWarpCount,uint32 LastWarpCount() const,This function is no longer used. Please update your code to use time-based breadcrumbs instead.
Length,FFrameNumber Length() const { return End - Start; },Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
LexFromString,"INSTALLBUNDLEMANAGER_API void LexFromString(EInstallBundleSourceType& OutType, const TCHAR* String);",Use FInstallBundleSourceType
LexToString,INSTALLBUNDLEMANAGER_API const TCHAR* LexToString(EInstallBundleSourceType Type);,Use FInstallBundleSourceType
LoadAssetsIfNeeded,"ASSETTOOLS_API bool LoadAssetsIfNeeded(const TArray<FString>& ObjectPaths, TArray<UObject*>& LoadedObjects, bool bAllowedToPromptToLoadAssets = true, bool bLoadRedirects = false);",Use LoadAssetsIfNeeded taking struct FLoadAssetsSettings instead.
LocateBoundObjects,"MOVIESCENE_API void LocateBoundObjects(const FGuid& ObjectId, const UE::UniversalObjectLocator::FResolveParams& ResolveParams, TArray<UObject*, TInlineAllocator<1>>& OutObjects) const;",Please use the version that also takes a SharedPlaybackState
LocateBoundObjects,"TArray<UObject*, TInlineAllocator<1>> LocateBoundObjects(const FGuid& ObjectId, const UE::UniversalObjectLocator::FResolveParams& Context) const",Please use the version that also takes a SharedPlaybackState
LogHashMemoryOverheadStatistics,"inline void LogHashMemoryOverheadStatistics(FOutputDevice& Ar, const bool bShowIndividualStats)",LogHashMemoryOverheadStatistics that takes bool parameter has been deprecated.
MakeDefaultLocator,virtual FUniversalObjectLocator MakeDefaultLocator() const;,No longer required. Please override MakeDefaultLocatorFragment
MakeEditUI,virtual TSharedPtr<SWidget> MakeEditUI(TSharedPtr<IUniversalObjectLocatorCustomization> Customization) { return nullptr; },Please use MakeEditUI that takes a FEditUIParameters struct
MaliOfflineCompilerPath,FFilePath MaliOfflineCompilerPath;,"This property has been deprecated, please use OfflineCompilerPath instead."
MallocPersistentAuxiliary,"static CORE_API void* MallocPersistentAuxiliary(SIZE_T InSize, uint32 InAlignment = 0);",Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
MangleGuidToVerseIdent,CORE_API FString MangleGuidToVerseIdent(const FString& Guid);,Use MakeValidVerseIdentifier instead
MarkAsReachableInterlocked_ForGC,COREUOBJECT_API bool MarkAsReachableInterlocked_ForGC();,MarkAsReachableInterlocked_ForGC() can only be used by the garbage collector.
MaterialDynamicFriction,FRealSingle MaterialDynamicFriction;,Use DynamicFriction instead
MaterialRestitution,FRealSingle MaterialRestitution;,Use Restitution instead
MaterialStateIds_DEPRECATED,"TArray<FGuid, TInlineAllocator<2>> MaterialStateIds_DEPRECATED;",GenerationHash is now used
MaterialStaticFriction,FRealSingle MaterialStaticFriction;,Use StaticFriction instead
Name,FName Name;,"Will be made private in 5.7, use Get/Set methods instead."
NegateEnumStates,UMG_API void NegateEnumStates();,FWidgetStateBitfield currently no longer supports enum states
NotifyAddActiveSound,ENGINE_API void NotifyAddActiveSound(FActiveSound& ActiveSound) const,NotifyAddActiveSound is deprecated. Use NotifySubsystemsActiveSoundCreated instead.
NotifyItemDataRefreshed,void NotifyItemDataRefreshed();,No data source should be able request a full data refresh. On large projects this can quickly destroy the editor performance. To avoid that all data sources should support queueing the required incremental data updates for their items. Look for uses of the function QueueItemDataUpdate for examples.
NotifyItemDataRefreshed,virtual void NotifyItemDataRefreshed() override;,"NotifyItemDataRefreshed is deprecated, for editor performance reasons no external systems should be able to request a full refresh."
NotifyItemDataRefreshed,virtual void NotifyItemDataRefreshed() = 0;,"NotifyItemDataRefreshed is deprecated, for editor performance reasons no external systems should be able to request a full refresh."
NotifyPendingDeleteInternal,ENGINE_API void NotifyPendingDeleteInternal(FActiveSound& ActiveSound) const,NotifyPendingDeleteInternal is deprecated. Use NotifySubsystemsActiveSoundDeleting and/or NotifySubsystemsVirtualizedSoundDeleting instead.
nullptr,INavRelevantInterface* NavInterface = nullptr;,Use NavigationElement instead.
nullptr,FResourceBulkDataInterface* BulkData = nullptr;,Please use FRHITextureCreateDesc for creating Textures with Bulk Data
nullptr,FShaderResourceViewRHIRef GPUTransformsSRV = nullptr;,GPUTransformsSRV has been deprecated. GPU Scene should be used instead.
NumNativeInstancesPerLayer,TArray<uint32> NumNativeInstancesPerLayer;,FRHIRayTracingScene layers are deprecated. Use MaxNumInstances and create one FRHIRayTracingScene per layer instead.
NumWarpCounts,int32 NumWarpCounts() const,This function is no longer used. Please update your code to use time-based breadcrumbs instead.
objects,/** Returns set of source objects (including actors) to ignore during the trace. Note that elements are NOT guaranteed to be unique. This is less important for actors since it's less likely that duplicates are added.*/,Use GetIgnoredSourceObjects instead.
ObjectToOctreeId,"TMap<uint32, FOctreeElementId2> ObjectToOctreeId;",Use ElementToOctreeId instead.
OctreeChildNodesMap,"TMultiMap<UObject*, FWeakObjectPtr> OctreeChildNodesMap;",This container is no longer used. Use AddChild/RemoveChild/GetChildren methods instead.
OffsetOfFlags,FORCEINLINE static constexpr ::size_t OffsetOfFlags(),OffsetOfFlags() can only be used by the garbage collector.
OnAssetsAddExtraObjectsToDelete,static UNREALED_API FOnAssetsAddExtraObjectsToDelete OnAssetsAddExtraObjectsToDelete;,Delegate signature for OnAssetsAddExtraObjectsToDelete has been deprecated please use new version OnAddExtraObjectsToDelete
OnAssetsAddExtraObjectsToDelete,ENGINE_API void OnAssetsAddExtraObjectsToDelete(TArray<UObject*>& ObjectsToDelete);,OnAssetsAddExtraObjectsToDelete signature has been deprecated please use OnAddExtraObjectsToDelete instead
OnCanBindToContextStruct,FOnCanBindToContextStruct OnCanBindToContextStruct;,Please use OnCanBindToContextStructWithIndex instead.
OnDataStorageInterfacesSet,TYPEDELEMENTFRAMEWORK_API FSimpleMulticastDelegate& OnDataStorageInterfacesSet();,Use UE::Editor::DataStorage::OnAllStorageFeaturesEnabled instead
OnNavRelevantObjectRegistered,FOnNavRelevantObjectRegistrationEvent OnNavRelevantObjectRegistered;,Use OnNavigationElementAddedDelegate instead.
OnNavRelevantObjectUnregistered,FOnNavRelevantObjectRegistrationEvent OnNavRelevantObjectUnregistered;,Use OnNavigationElementRemovedDelegate instead.
OnNotifyAddActiveSound,virtual void OnNotifyAddActiveSound(FActiveSound& ActiveSound) {},OnNotifyAddActiveSound is deprecated. Use NotifyActiveSoundCreated instead.
OnNotifyPendingDelete,virtual void OnNotifyPendingDelete(const FActiveSound& ActiveSound) {},OnNotifyPendingDelete is deprecated. Use NotifyActiveSoundDeleting and/or NotifyVirtualizedSoundDeleting instead.
OnPostEntitiesCreated,"bool OnPostEntitiesCreated(FMassProcessingContext& InProcessingContext, const FMassArchetypeEntityCollection& EntityCollection);",This flavor of OnPostEntitiesCreated is deprecated. Please use the one taking a TConstArrayView<FMassArchetypeEntityCollection> parameter instead
OnPostProcessInputsInternal,ENGINE_API void OnPostProcessInputsInternal(const int32 PhysicsStep) {};,"Deprecated, Logic moved to async flow through FAsyncNetworkPhysicsComponent::OnPostProcessInputs_Internal instead"
OnPreProcessInputsInternal,ENGINE_API void OnPreProcessInputsInternal(const int32 PhysicsStep) {};,"Deprecated, Logic moved to async flow through FAsyncNetworkPhysicsComponent::OnPreProcessInputs_Internal instead"
OnSelectionChanged,"void OnSelectionChanged(TSharedPtr<FString> NewSelection, ESelectInfo::Type /*SelectInfo*/)",Unused
OnUpdated,FOnModelUpdated OnUpdated;,"This member is no longer supported, please subscribe to UMovieSceneSignedObject::OnModifiedDirectly."
OpenAsyncReadPackage,"FOpenAsyncPackageResult OpenAsyncReadPackage(const FPackagePath& PackagePath, EPackageSegment PackageSegment)",Use the overload that takes a FBulkDataCookedIndex
OpenLevel,TSharedPtr<FUICommandInfo> OpenLevel;,This command has been moved to FGlobalEditorCommonCommands and is no longer registered.
OpenReadPackage,"FOpenPackageResult OpenReadPackage(const FPackagePath& PackagePath, EPackageSegment PackageSegment,",Use the overload that takes a FBulkDataCookedIndex
operator!=,"friend bool operator!=(const FMovieSceneTimeWarping& A, const FMovieSceneTimeWarping& B)",Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
operator*,FORCEINLINE const AssignedType& operator*() const,Use GetOriginalValue() instead.
operator*,FORCEINLINE const AssignedType& operator*() const,Use GetOriginalValue() instead.
operator==,ENGINE_API bool operator==(const UObject*& OtherOwner) const;,This operator will no longer be used.
operator==,"friend bool operator==(const FMovieSceneTimeWarping& A, const FMovieSceneTimeWarping& B)",Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
operator==,bool operator==(const FHttpStats& Other) const,operator== for FHttpStats has been deprecated and will be removed.
OptionalSourceObject,TWeakObjectPtr<UObject> OptionalSourceObject;,Use OptionalSourceElement instead.
Outputs,"TMap< int, FDataflowOutput* > Outputs;","Will be made private in 5.7, use Get/Set methods instead."
OverridesSparseClassDataArchetype,COREUOBJECT_API bool OverridesSparseClassDataArchetype() const;,"Replace with UE::Reflection::DoesSparseClassDataOverrideArchetype(Class, [](const FProperty*){return true;})"
Owner,FWeakObjectPtr Owner;,Use NavigationElement instead.
PackagesMarkedEditorOnlyByOtherPackage,"TMap<FName, TSet<FName>> PackagesMarkedEditorOnlyByOtherPackage;",No longer used; skiponlyeditoronly is used instead and tracks editoronly references via savepackage results.
ParentEndFrameOffset,FFrameNumber ParentEndFrameOffset;,This field is no longer supported.
ParentFirstLoopStartFrameOffset,FFrameNumber ParentFirstLoopStartFrameOffset;,This field is no longer supported.
ParentStartFrameOffset,FFrameNumber ParentStartFrameOffset;,This field is no longer supported.
ParseCloth,"void ParseCloth(FXmlNode* InNode, TSharedPtr<IDatasmithClothElement>& OutElement) const;",The experimental Cloth importer is no longer supported.
ParseClothActor,"void ParseClothActor(FXmlNode* InNode, TSharedPtr<IDatasmithClothActorElement>& OutElement, TSharedRef< IDatasmithScene > Scene) const;",The experimental Cloth importer is no longer supported.
PendingOctreeUpdates,TSet<FNavigationDirtyElement> PendingOctreeUpdates;,Use PendingUpdates instead.
PerformAnimationProcessing,"ENGINE_API void PerformAnimationProcessing(const USkeletalMesh* InSkeletalMesh, UAnimInstance* InAnimInstance, bool bInDoEvaluation, TArray<FTransform>& OutSpaceBases, TArray<FTransform>& OutBoneSpaceTransforms, FVector& OutRootBoneTranslation, FBlendedHeapCurve& OutCurve, UE::Anim::FMeshAttributeContainer& OutAttributes);",Please use PerformAnimationEvaluation with different signature
PerInstanceGeometries,TArray<FRHIRayTracingGeometry*> PerInstanceGeometries;,PerInstanceGeometries should be provided in FRayTracingSceneBuildParams.
PollOcclusionQueries,FORCEINLINE_DEBUGGABLE void PollOcclusionQueries(),PollOcclusionQueries is no longer necessary. It has been deprecated and there is no replacement. Remove any remaining calls to PollOcclusionQueries.
PollRenderQueryResults,FORCEINLINE void PollRenderQueryResults() {},RHIPollRenderQueryResults is deprecated. Platform RHIs that require query polling now do this automatically as part of RHI command list submission.
PopEvent,FORCEINLINE_DEBUGGABLE void PopEvent(),"RHIPopEvent is deprecated. All events and markers now use the RHI breadcrumb system. Use RDG_EVENT_SCOPE or SCOPED_DRAW_EVENT macros to mark up rendering code, rather than calling this function directly."
PopulateReplicationCache,ENGINE_API void PopulateReplicationCache(const int32 PhysicsStep) { },"Deprecated, ReplicationCache has been moved to FPhysicsReplicationCache and it's getting populated automatically. Use GetStateFromReplicationCache() and RegisterForReplicationCache() to use the replication cache. "
position,/** Get the target position (asserts if not in Position mode) */,This method is Deprecated and it will be removed in a future release. Use GetPosition instead
PostLoadAssetRegistryTags,"COREUOBJECT_API virtual void PostLoadAssetRegistryTags(const FAssetData& InAssetData, TArray<FAssetRegistryTag>& OutTagsAndValuesToUpdate) const final {}","This function is no longer called. If you require this functionality, please implement ThreadedPostLoadAssetRegistryTagsOverride. \
Note that this function MUST be safe to call on a background thread. If you have functionality that doesn't meet that requirement, \
consider using the AssetRegistry's AssetAddedEvent which fires on the game thread."
PostLoadBlueprintAssetRegistryTags,"static ENGINE_API void PostLoadBlueprintAssetRegistryTags(const FAssetData& InAssetData, TArray<FAssetRegistryTag>& OutTagsAndValuesToUpdate);",This function is no longer called. See UObject::PostLoadAssetRegistryTags for more information.
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,Hash of type FIoChunkHash is deprecated. Use ChunkHash of type FIoHash instead.
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,Use ShaderCodeResources
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This has moved to the UE::MathCore::Graph namespace
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,Use ICustomSlateElement::Draw instead.
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,Use RDG version instead.
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,This path is longer supported. Get the render proxy instead.
PRAGMA_DISABLE_DEPRECATION_WARNING,PRAGMA_DISABLE_DEPRECATION_WARNINGS,Use Draw_RenderThread with an RDG builder instead
PragmaDirectives,TArray<FString> PragmaDirectives;,PragmaDirectives are now only accessible via the FShaderPreprocessOutput struct
PreDestroyObject,"MOVIESCENE_API virtual void PreDestroyObject(UObject& Object, const FGuid& BindingId, FMovieSceneSequenceIDRef TemplateID);",Please use the version of this with BindingIndex
PreGDMECallback,"virtual void PreGDMECallback(FRHICommandList& RHICmdList, class FGPUSkinCache* GPUSkinCache, uint32 FrameNumber) {}",PreGDMECallback is no longer used
PrepareCellForCook,virtual bool PrepareCellForCook(UPackage* InPackage) { return false; },Use version with IWorldPartitionCookPackageContext
PrepassLayoutScaleMultiplier,TOptional<float> PrepassLayoutScaleMultiplier;,Direct access to PrepassLayoutScaleMultiplier is deprecated. Use the GetPrepassLayoutScaleMultiplier. The scale multitplier can only be set in the prepass.
Present,virtual bool Present(int32& InOutSyncInterval) { check(false); return true; };,"Please replace with Present(IRHICommandContext& RHICmdContext, int32& InOutSyncInterval)."
Print,"ENGINE_API virtual void Print(const TArray<FString>& SearchForKeywords, const FGraphActionListBuilderBase::ActionGroup& Action) const;","FGraphActionListBuilderBase::ActionGroup weight calculation was always performed on the first action, provide that if scoring a FGraphActionListBuilderBase::ActionGroup, or just provide the FEdGraphSchemaAction"
PrintSearchTextDebugInfo,"ENGINE_API void PrintSearchTextDebugInfo(const TArray<FString>& InFilterTerms, const FGraphActionListBuilderBase::ActionGroup& InCurrentAction, const FGraphSchemaSearchTextDebugInfo* InDebugInfo) const;","Only the first entry in the action group has ever been used, provide it to PrintSearchTextDebugInfo"
ProcessRecordedTimes,"void ProcessRecordedTimes(UAnimSequence* AnimSequence, USkeletalMeshComponent* SkeletalMeshComponent, const FString& HoursName, const FString& MinutesName, const FString& SecondsName, const FString& FramesName, const FString& SubFramesName, const FString& SlateName, const FString& Slate, const FTimecodeBoneMethod& TimecodeBoneMethod);",Use the ProcessRecordedTimes method that takes a FProcessRecordedTimeParams struct.
ProcessRecordedTimes,"void ProcessRecordedTimes(UAnimSequence* AnimSequence, USkeletalMeshComponent* SkeletalMeshComponent, const FString& HoursName, const FString& MinutesName, const FString& SecondsName, const FString& FramesName, const FString& SubFramesName, const FString& SlateName, const FString& Slate, const FTimecodeBoneMethod& TimecodeBoneMethod);",Use the ProcessRecordedTimes method that takes a FProcessRecordedTimeParams struct.
PushEvent,"FORCEINLINE_DEBUGGABLE void PushEvent(const TCHAR* Name, FColor Color)","RHIPushEvent is deprecated. All events and markers now use the RHI breadcrumb system. Use RDG_EVENT_SCOPE or SCOPED_DRAW_EVENT macros to mark up rendering code, rather than calling this function directly."
RasterizeGeometryTransformCoords,"NAVIGATIONSYSTEM_API void RasterizeGeometryTransformCoords(const TArray<FVector::FReal>& Coords, const FTransform& LocalToWorld);",This function was not handling the indices order correctly and is replaced by RasterizeGeometryTransformCoordsAndFlipIndices.
RayTraceDispatch,"FORCEINLINE_DEBUGGABLE void RayTraceDispatch(FRayTracingPipelineState* Pipeline, FRHIRayTracingShader* RayGenShader, FRHIRayTracingScene* Scene, const FRayTracingShaderBindings& GlobalResourceBindings, uint32 Width, uint32 Height)",Provide FRHIShaderBindingTable instead of FRayTracingScene.
RayTraceDispatchIndirect,"FORCEINLINE_DEBUGGABLE void RayTraceDispatchIndirect(FRayTracingPipelineState* Pipeline, FRHIRayTracingShader* RayGenShader, FRHIRayTracingScene* Scene, const FRayTracingShaderBindings& GlobalResourceBindings, FRHIBuffer* ArgumentBuffer, uint32 ArgumentOffset)",Provide FRHIShaderBindingTable instead of FRayTracingScene.
RayTracingDecalInstanceIndex,uint32 RayTracingDecalInstanceIndex;,Provide RayTracingGeometry and DecalGlobalGeometrySegmentIndex instead of RayTracingDecalInstanceIndex
RayTracingGeometryRHI,FRayTracingGeometryRHIRef RayTracingGeometryRHI;,Use GetRHI() instead.
RayTracingInstanceIndex,uint32 RayTracingInstanceIndex;,Provide RayTracingGeometry and SBTSegmentRange instead of RayTracingInstanceIndex
ReadLockEnumerateTagToAssetDatas,"virtual void ReadLockEnumerateTagToAssetDatas(TFunctionRef<void(FName TagName, const TArray<const FAssetData*>& Assets)> Callback) const override;",ReadLockEnumerateTagToAssetDatas with TArray has been deprecated. Use ReadLockEnumerateAllTagToAssetDatas instead.
ReadLockEnumerateTagToAssetDatas,"virtual void ReadLockEnumerateTagToAssetDatas(TFunctionRef<void(FName TagName, const TArray<const FAssetData*>& Assets)> Callback) const = 0;",ReadLockEnumerateTagToAssetDatas with TArray has been deprecated. Use ReadLockEnumerateTagToAssetDatas with EnumerateAssets callback instead.
ReadPackageDataDependencies,"ASSETREGISTRY_API bool ReadPackageDataDependencies(FArchive& BinaryArchive, TBitArray<>& OutImportUsedInGame, TBitArray<>& OutSoftPackageUsedInGame);",Use version that takes FReadPackageDataArgs
ReallocateWeightmaps,"LANDSCAPE_API void ReallocateWeightmaps(FLandscapeEditDataInterface* DataInterface = nullptr, bool InCanUseEditingWeightmap = true, bool InSaveToTransactionBuffer = true, bool InForceReallocate = false, ALandscapeProxy* InTargetProxy = nullptr, TArray<UTexture*>* OutNewCreatedTextures = nullptr);","Use the new prototype of ReallocateWeightmaps : note : this is very internal stuff, normally, you shouldn't have to use this function at all"
RecastErodeWalkable,"NAVIGATIONSYSTEM_API bool RecastErodeWalkable(FNavMeshBuildContext& BuildContext, FTileRasterizationContext& RasterContext);",Use the new version without RasterContext instead.
RecordedSceneQueries,"TMap<int32, TSharedPtr<FChaosVDQueryDataWrapper>> RecordedSceneQueries;","RecordedSceneQueries is deprecated and will be removed in a future release, use RecordedSceneQueriesByQueryID instead."
RecordedTrack,const FRecordedTransformTrack* RecordedTrack;,No longer used
ReferencedGeometries,TArray<TRefCountPtr<FRHIRayTracingGeometry>> ReferencedGeometries;,ReferencedGeometries should be provided in FRayTracingSceneBuildParams.
ReferencingAssets,TArray<FAssetData> ReferencingAssets;,ReferencingAssets is deprecated. Use the AddReferencingAsset functions to add referencers and GetReferencingAssets to get them.
RegisterNavOctreeElement,"NAVIGATIONSYSTEM_API FSetElementId RegisterNavOctreeElement(UObject& ElementOwner, INavRelevantInterface& ElementInterface, int32 UpdateFlags);",Use RegisterNavigationElementWithNavOctree instead.
RegisterNavOctreeElement,"NAVIGATIONSYSTEM_API FSetElementId RegisterNavOctreeElement(UObject* ElementOwner, INavRelevantInterface* ElementInterface, int32 UpdateFlags);",Use the version taking FNavigationElement as parameter instead.
RegisterOutputConnection,"FDataflowOutput& RegisterOutputConnection(const T* Reference, const T* Passthrough, const FName& PropertyName, const FName& PassthroughName)",PassthroughName is no longer needed to register output connections
RegisterPersistentAuxiliary,"static inline void RegisterPersistentAuxiliary(void* /*InMemory*/, SIZE_T /*InSize*/) {}",Persistent Auxiliary allocator is obsolete and is replaced by a GetPersistentLinearAllocator()
RegisterSourceControlProjectDirDelegate,virtual void RegisterSourceControlProjectDirDelegate(const FSourceControlProjectDirDelegate& SourceControlProjectDirDelegate) override;,Use RegisterCustomProjectsDelegate instead.
RegisterSourceControlProjectDirDelegate,virtual void RegisterSourceControlProjectDirDelegate(const FSourceControlProjectDirDelegate& SourceControlProjectDirDelegate) = 0;,Use RegisterCustomProjectsDelegate instead.
ReleaseSourceMemory,FORCEINLINE void ReleaseSourceMemory() { },Remove call to ReleaseSourceMemory.
ReleaseThreadOwnership,FORCEINLINE void ReleaseThreadOwnership(),"FRHICommandListImmediate::ReleaseThreadOwnership() is deprecated. Thread ownership of the RHI is automatic, so this function is redundant."
RemoveBulkData,FORCEINLINE void RemoveBulkData() { },RemoveBulkData did not actually remove bulkdata; use ReleaseBulkDataCachedMemory if that's what you wanted
RemoveCloth,virtual void RemoveCloth(const TSharedPtr< IDatasmithClothElement >& InElement) override;,The experimental Cloth importer is no longer supported.
RemoveCloth,virtual void RemoveCloth(const TSharedPtr< IDatasmithClothElement >& InElement) = 0;,The experimental Cloth importer is no longer supported.
RemoveClothAt,virtual void RemoveClothAt(int32 InIndex) override;,The experimental Cloth importer is no longer supported.
RemoveClothAt,virtual void RemoveClothAt(int32 InIndex) = 0;,The experimental Cloth importer is no longer supported.
RemoveClothCollisionSource,void RemoveClothCollisionSource(USkeletalMeshComponent* InSourceComponent),This function has been renamed RemoveClothCollisionSources
RemoveDecoder,virtual void RemoveDecoder(ICompressedAudioInfo* CompressedAudioInfo) { LogWarning(); },Use These methods are no longer used (removing the unused legacy streaming manager)
RemoveHierarchicalBlendTarget,FComponentTypeID RemoveHierarchicalBlendTarget;,This tag is no longer used. Blend targets are entirely managed by UMovieSceneHierarchicalBiasSystem now.
RemoveNavOctreeElementId,"NAVIGATIONSYSTEM_API void RemoveNavOctreeElementId(const FOctreeElementId2& ElementId, int32 UpdateFlags);",Use RegisterFromNavOctree instead.
RemoveNavOctreeElementId,"NAVIGATIONSYSTEM_API void RemoveNavOctreeElementId(const FOctreeElementId2& ElementId, int32 UpdateFlags);",This functionality should not be exposed publicly and will be removed. Derived classes should use RemoveFromNavOctree instead.
RemoveObjectsNavOctreeId,NAVIGATIONSYSTEM_API void RemoveObjectsNavOctreeId(const UObject& Object);,Use RemoveNode instead.
RemoveObjectsNavOctreeId,NAVIGATIONSYSTEM_API void RemoveObjectsNavOctreeId(const UObject& Object);,This functionality should not be exposed and will be removed.
RemoveOnActorDestroyededHandler,void RemoveOnActorDestroyededHandler(FDelegateHandle InHandle) const;,Use the typo corrected version RemoveOnActorDestroyedHandler
RemoveSoundBufferForResourceID,ENGINE_API void RemoveSoundBufferForResourceID(uint32 ResourceID);,This is no longer used.  Existing calls may be deleted
RemoveStreamingSoundSource,virtual void RemoveStreamingSoundSource(FSoundSource* SoundSource) { LogWarning(); },Use These methods are no longer used (removing the unused legacy streaming manager)
RemoveStreamingSoundWave,virtual void RemoveStreamingSoundWave(const FSoundWaveProxyPtr& SoundWave) { LogWarning(); },Use These methods are no longer used (removing the unused legacy streaming manager)
ReplaceActors,"UNREALED_API void ReplaceActors(UActorFactory* Factory, const FAssetData& AssetData, const TArray<AActor*>& ActorsToReplace, TArray<AActor*>* OutNewActors = nullptr, bool bCopySourceProperties = true);",Please use UEditorActorSubsystem::ReplaceActors instead.
ReplaceAreaInOctreeData,"NAVIGATIONSYSTEM_API bool ReplaceAreaInOctreeData(const UObject& Object, TSubclassOf<UNavArea> OldArea, TSubclassOf<UNavArea> NewArea, bool bReplaceChildClasses);",Use the overloaded version with FNavigationElement instead.
ReplaceAreaInOctreeData,"NAVIGATIONSYSTEM_API bool ReplaceAreaInOctreeData(const UObject& Object, TSubclassOf<UNavArea> OldArea, TSubclassOf<UNavArea> NewArea, bool bReplaceChildClasses = false);",Use the version taking FNavigationElement instead.
ReplaceSelectedActors,"UNREALED_API void ReplaceSelectedActors(UActorFactory* Factory, const FAssetData& AssetData, bool bCopySourceProperties = true);",Please use UEditorActorSubsystem::ReplaceSelectedActors instead.
Reset,void Reset() { ClearAllBits(); },Use ClearAllBits instead.
Reset,inline void Reset() { ClearAllBits(); },Use ClearAllBits instead.
ResetStreamingSourceInfo,ENGINE_API virtual void ResetStreamingSourceInfo() const {},Use version that takes FWorldPartitionStreamingContext instead.
ResimulationErrorThreshold,static float ResimulationErrorThreshold(),"ResimulationErrorThreshold has been renamed, please use GetResimulationErrorPositionThreshold."
ReverseCacheBeginTime,float ReverseCacheBeginTime;,No longer used
RewindUsesCollisionResimCache,bool RewindUsesCollisionResimCache() const { return GetUseCollisionResimCache(); },"Deprecated, use GetUseCollisionResimCache() instead"
RewriteHlsl,"bool RewriteHlsl(const FShaderConductorOptions& Options, FString* OutSource = nullptr);",DXC rewriter has been deprecated since UE5.5. FShaderConductorContext::RewriteHlsl will be removed in future versions.
RHIAcquireThreadOwnership,FORCEINLINE void RHIAcquireThreadOwnership(),"RHIAcquireThreadOwnership() is deprecated. Thread ownership of the RHI is automatic, so this function is redundant."
RHICalcRayTracingSceneSize,"FORCEINLINE FRayTracingAccelerationStructureSize RHICalcRayTracingSceneSize(uint32 MaxInstances, ERayTracingAccelerationStructureFlags Flags)",Provide FRayTracingSceneInitializer instead.
RHICalcTexture2DArrayPlatformSize,"FORCEINLINE uint64 RHICalcTexture2DArrayPlatformSize(uint32 SizeX, uint32 SizeY, uint32 ArraySize, uint8 Format, uint32 NumMips, uint32 NumSamples, ETextureCreateFlags Flags, const FRHIResourceCreateInfo& CreateInfo, uint32& OutAlign)",The separate RHICalcTexture... functions for each texture type are deprecated. Use RHICalcTexturePlatformSize instead.
RHICalcTexture2DPlatformSize,"FORCEINLINE uint64 RHICalcTexture2DPlatformSize(uint32 SizeX, uint32 SizeY, uint8 Format, uint32 NumMips, uint32 NumSamples, ETextureCreateFlags Flags, const FRHIResourceCreateInfo& CreateInfo, uint32& OutAlign)",The separate RHICalcTexture... functions for each texture type are deprecated. Use RHICalcTexturePlatformSize instead.
RHICalcTexture3DPlatformSize,"FORCEINLINE uint64 RHICalcTexture3DPlatformSize(uint32 SizeX, uint32 SizeY, uint32 SizeZ, uint8 Format, uint32 NumMips, ETextureCreateFlags Flags, const FRHIResourceCreateInfo& CreateInfo, uint32& OutAlign)",The separate RHICalcTexture... functions for each texture type are deprecated. Use RHICalcTexturePlatformSize instead.
RHICalcTextureCubePlatformSize,"FORCEINLINE uint64 RHICalcTextureCubePlatformSize(uint32 Size, uint8 Format, uint32 NumMips, ETextureCreateFlags Flags, const FRHIResourceCreateInfo& CreateInfo, uint32& OutAlign)",The separate RHICalcTexture... functions for each texture type are deprecated. Use RHICalcTexturePlatformSize instead.
RHICalcVMTexture2DPlatformSize,"FORCEINLINE uint64 RHICalcVMTexture2DPlatformSize(uint32 Mip0Width, uint32 Mip0Height, uint8 Format, uint32 NumMips, uint32 FirstMipIdx, uint32 NumSamples, ETextureCreateFlags Flags, uint32& OutAlign)",The separate RHICalcTexture... functions for each texture type are deprecated. Use RHICalcTexturePlatformSize instead.
RHIInvalidateCachedState,FORCEINLINE_DEBUGGABLE void RHIInvalidateCachedState(),RHIInvalidateCachedState is not implemented by any platform RHI.
RHIReleaseThreadOwnership,FORCEINLINE void RHIReleaseThreadOwnership(),"RHIReleaseThreadOwnership() is deprecated. Thread ownership of the RHI is automatic, so this function is redundant."
RHIRequiresComputeGenerateMips,FORCEINLINE bool RHIRequiresComputeGenerateMips(),RHIRequiresComputeGenerateMips is deprecated and always returns true. Use FGenerateMips helper class from the RenderCore module to generate mips on textures.
RootToSequenceWarpCounter,FMovieSceneWarpCounter RootToSequenceWarpCounter;,This member is no longer supported
rotation,/** Get the target rotation (asserts if not in Position mode) */,This method is Deprecated and it will be removed in a future release. Use GetRotation instead
RotationForWPO_DEPRECATED,FQuat RotationForWPO_DEPRECATED;,GenerationHash is now used
RunProcessorsView,"MASSENTITY_API void RunProcessorsView(TArrayView<UMassProcessor* const> Processors, FMassProcessingContext& ProcessingContext, const FMassArchetypeEntityCollection* EntityCollection);",This flavor of RunProcessorsView is deprecated. Use the one with TConstArrayView<FMassArchetypeEntityCollection> parameter instead.
SceneComponentBinding,TComponentTypeID<FGuid> SceneComponentBinding;,Please use GenericObjectBinding and BoundObjectResolver
SegmentPrefixSum,TArray<uint32> SegmentPrefixSum;,Providing SegmentPrefixSum is no longer necessary.
SendInputData,ENGINE_API void SendInputData() {},"Deprecated, inputs are sent from PT marshaled data and can't be manually triggered on GT."
SendStateData,ENGINE_API void SendStateData() {},"Deprecated, states are sent from PT marshaled data and can't be manually triggered on GT."
Serialize,"bool Serialize(FArchive& Ar, bool bInlineShaderResources = true, bool bLoadingCooked = false, bool bInlineShaderCode = false, const FName& SerializingAsset = NAME_None)",Please use overload accepting an FShaderSerializeContext. Note that inlining of shader code into runtime shadermaps is no longer supported. If you rely on this please reach out to the UE rendering team.
Serialize,RENDERCORE_API bool Serialize(FArchive& Ar),Use overload accepting a FShaderSerializeContext instead
Serialize,"void Serialize(FArchive& Ar, bool bLoadingCooked)",Use overload accepting an FShaderSerializeContext object
Serialize,"RENDERCORE_API bool Serialize(FArchive& Ar, bool bInlineShaderResources, bool bLoadingCooked, bool bInlineShaderCode = false, const FName& SerializingAsset = NAME_None)",Please use overload accepting an FShaderSerializeContext. Note that inlining of shader code into runtime shadermaps is no longer supported. If you rely on this please reach out to the UE rendering team.
SerializeCompressedData,ENGINE_API virtual void SerializeCompressedData(class FArchive& Ar);,SerializeCompressedData now accepts the DataOwner as an argument
SerializeOutput,virtual void SerializeOutput(FArchive& Ar) {},Use overload accepting an FShaderCacheSerializeContext struct
SerializeOutput,virtual RENDERCORE_API void SerializeOutput(FArchive& Ar) override,Use overload accepting an FShaderCacheSerializeContext
SerializeOutput,virtual RENDERCORE_API void SerializeOutput(FArchive& Ar) override,Use overload accepting an FShaderCommonCompileJob::FSerializationContext
SetActorDetailsSCSEditorUICustomization,virtual void SetActorDetailsSCSEditorUICustomization(TSharedPtr<class ISCSEditorUICustomization> ActorDetailsSCSEditorUICustomization) {};,Use AddActorDetailsSCSEditorUICustomization/RemoveActorDetailsSCSEditorUICustomization instead.
SetAnimClass,ENGINE_API virtual void SetAnimClass(class UClass* NewClass);,This function is deprecated. Please use 'SetAnimInstanceClass' instead. 
SetBatchedShaderParametersMixed,inline void SetBatchedShaderParametersMixed(,SetBatchedShaderParametersMixed does not need an RHI shader
SetBBoxGrowth,void SetBBoxGrowth(const FVector& InBBox),Use BBoxGrowthLow and BBoxGrowthHigh properties instead.
SetColorOverrideStream,"FORCEINLINE_DEBUGGABLE void SetColorOverrideStream(FRHICommandList& RHICmdList, const FVertexBuffer* ColorVertexBuffer) const",SetColorOverrideStream is no longer used
SetCommandListStat,inline void SetCommandListStat(TStatId StatId) {},SetCommandListStat is deprecated. The underlying stats have been removed. Consider marking up rendering code with RDG event scopes.
SetContentFromStreamDelegate,bool SetContentFromStreamDelegate(FHttpRequestStreamDelegate StreamDelegate);,SetContentFromStreamDelegate has been deprecated and will not be supported because there is no seek support through delegate. Implement your own FArchive instead.
SetCookData,void SetCookData(FArchiveCookData* InCookData),Use SetSavePackageData.
SetCookData,void SetCookData(FArchiveCookData* InCookData),Use SetSavePackageData.
SetCurrentStat,inline void SetCurrentStat(TStatId Stat) {},SetCurrentStat is deprecated and there is no replacement. Consider marking up rendering code with RDG event scopes or RHI breadcrumbs.
SetElementIdImpl,"NAVIGATIONSYSTEM_API void SetElementIdImpl(const uint32 OwnerUniqueId, FOctreeElementId2 Id);",Use the version taking a FNavigationElementHandle instead.
SetEnumState,"UMG_API void SetEnumState(uint8 EnumStateIndex, uint8 EnumStateValue);",FWidgetStateBitfield currently no longer supports enum states
SetEnumState,UMG_API void SetEnumState(const FWidgetStateBitfield& EnumStateBitfield);,FWidgetStateBitfield currently no longer supports enum states
SetEnumStateSlow,"UMG_API void SetEnumStateSlow(FName EnumStateName, uint8 EnumStateValue);",FWidgetStateBitfield currently no longer supports enum states
SetForceUpdateDynamicDataImmediately,void SetForceUpdateDynamicDataImmediately(bool bForceUpdateImmediately) {},This is no longer relevant. Dynamic data is always updated immediately.
SetGeometry,void SetGeometry(,Use SetGeometry with OuterDrag and OuterLift multipliers
SetHasBeenSimplified,static void SetHasBeenSimplified(bool bInHasBeenSimplified),This functionality has been removed. Use FSkeletalMeshLODInfo::bHasBeenSimplified instead.
SetLandscapeSplinesReservedLayer,LANDSCAPE_API void SetLandscapeSplinesReservedLayer(int32 InLayerIndex);,Use CreateLayer with a ULandscapeEditLayerSplines instead
SetLastSubmitTime,void SetLastSubmitTime(double InSubmitTime) {},SetLastSubmitTime is no longer used.
SetLoadedByEditorPropertiesOnly,"void SetLoadedByEditorPropertiesOnly(bool bIsEditorOnly, bool bRecursive = false) {}",No longer used; skiponlyeditoronly is used instead and tracks editoronly references via savepackage results.
SetMaybeUnreachable,COREUOBJECT_API void SetMaybeUnreachable();,SetMaybeUnreachable() can only be used by the garbage collector.
SetMovementComponent,AIMODULE_API virtual void SetMovementComponent(UNavMovementComponent* MoveComp) final;,"SetMovementComponent(UNavMovementComponent* MoveComp) is deprecated, please use SetNavMoveInterface(INavMoveInterface* NavMoveInterface) instead."
SetParameters,"RENDERER_API void SetParameters(FRHIBatchedShaderParameters& BatchedParameters, FRHIComputeShader* Shader, class FShaderBindingState* StateCacheShaderBindings = nullptr) const",Use the version of SetParameters that doesn't take an FRHIComputeShader.
SetPassthroughOffset,virtual void SetPassthroughOffset(const uint32 InPassthroughOffset),Use SetPassthroughInput instead
SetProperties,"void SetProperties(const FSolverVec2& InStiffness, const FSolverReal InBucklingRatio, const FSolverVec2& InBucklingStiffness)",Use version with FSolverVec2 InBucklingRatio.
SetProperties,void SetProperties(,Use the SetProperties that includes OuterDrag and OuterLift
SetProperties,"void SetProperties(const FSolverVec2& InStiffness, const FSolverReal InBucklingRatio, const FSolverVec2& InBucklingStiffness, const FSolverVec2& InDampingRatio = FSolverVec2::ZeroVector)",Use SetProperties with Weighted Buckling Ratio
SetRayTracingBindings,FORCEINLINE_DEBUGGABLE void SetRayTracingBindings(,Use FRHIShaderBindingTable instead.
SetRayTracingCallableShader,FORCEINLINE_DEBUGGABLE void SetRayTracingCallableShader(,Use FRHIShaderBindingTable instead.
SetRayTracingCallableShaders,FORCEINLINE_DEBUGGABLE void SetRayTracingCallableShaders(,Use FRHIShaderBindingTable instead.
SetRayTracingHitGroup,FORCEINLINE_DEBUGGABLE void SetRayTracingHitGroup(,Use FRHIShaderBindingTable instead.
SetRayTracingHitGroups,FORCEINLINE_DEBUGGABLE void SetRayTracingHitGroups(,Use FRHIShaderBindingTable instead.
SetRayTracingMissShader,FORCEINLINE_DEBUGGABLE void SetRayTracingMissShader(,Use FRHIShaderBindingTable instead.
SetRayTracingMissShaders,FORCEINLINE_DEBUGGABLE void SetRayTracingMissShaders(,Use FRHIShaderBindingTable instead.
SetRayTracingShaderBindingsForHitGroup,"RENDERER_API FRayTracingLocalShaderBindings* SetRayTracingShaderBindingsForHitGroup(FRayTracingLocalShaderBindingWriter* BindingWriter, uint32 InstanceIndex, uint32 SegmentIndex, uint32 HitGroupIndexInPipeline, uint32 ShaderSlot) const;",Use version with explicit FRHIRayTracingGeometry.
SetRayTracingShaderBindingsForHitGroup,RENDERER_API void SetRayTracingShaderBindingsForHitGroup(,Provide RayTracingGeometry and SBTSegmentIndex instead of InstanceIndex
SetRayTracingShaderBindingsForMissShader,"void SetRayTracingShaderBindingsForMissShader(FRHICommandList& RHICmdList, FRHIRayTracingScene* Scene, FRayTracingPipelineState* Pipeline, uint32 ShaderIndexInPipeline, uint32 ShaderSlot) const;",Use version with explicit FRHIShaderBindingTable.
SetResponseBodyReceiveStreamDelegate,HTTP_API bool SetResponseBodyReceiveStreamDelegate(FHttpRequestStreamDelegate StreamDelegate);,"SetResponseBodyReceiveStreamDelegate has been deprecated, use SetResponseBodyReceiveStreamDelegateV2 instead"
SetSerializeContext,virtual void SetSerializeContext(FUObjectSerializeContext* InLoadContext) {},SetSerializeContext is not supported. Remove calls to it.
SetShaderParametersMixedAS,"inline void SetShaderParametersMixedAS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShaderParametersMixedCS,"inline void SetShaderParametersMixedCS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShaderParametersMixedGS,"inline void SetShaderParametersMixedGS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShaderParametersMixedMS,"inline void SetShaderParametersMixedMS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShaderParametersMixedPS,"inline void SetShaderParametersMixedPS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShaderParametersMixedVS,"inline void SetShaderParametersMixedVS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShaderParametersMixedWS,"inline void SetShaderParametersMixedWS(FRHIBatchedShaderParameters& BatchedParameters, const TShaderRef<TShaderType>& InShader, const typename TShaderType::FParameters& Parameters, TArguments&&... InArguments)",Please use SetBatchedShaderParametersMixed directly.
SetShowRootMotionVisualizations,UNREALED_API void SetShowRootMotionVisualizations(const bool bShow) { VisualizeRootMotionMode = bShow ? EVisualizeRootMotionMode::Trajectory : EVisualizeRootMotionMode::None; },Use VisualizeRootMotionMode functions instead.
SetTrackFilterEnabled,"virtual void SetTrackFilterEnabled(const FText& InTrackFilterName, bool bEnabled) = 0;",SetTrackFilterEnabled() has been deprecated. Use GetFilterInterface()->SetFilterActiveByDisplayName() instead.
SetUnreachable,FORCEINLINE void SetUnreachable(),SetUnreachable() can only be used by the garbage collector.
SetUpdateCustomRenderer,GEOMETRYCOLLECTIONENGINE_API void SetUpdateCustomRenderer(bool bValue) {},SetUpdateCustomRenderer() shouldn't be called
SetupRewindData,ENGINE_API int32 SetupRewindData() { return 0; },"Deprecated, don't setup rewind data from GameThread"
SetViewportSettings,"virtual void SetViewportSettings(const TMap<FViewportClient*, EMovieSceneViewportParams>& ViewportParamsMap) {}",Viewport settings management has moved to FViewportSettingsPlaybackCapability
SetWindowRenderTarget,"virtual void SetWindowRenderTarget(const SWindow& Window, class IViewportRenderTargetProvider* Provider) {}",SetWindowRenderTarget is no longer used.
ShouldClearInvalidTags,bool ShouldClearInvalidTags() const,We should never clear invalid tags as we're not guaranteed the required plugin has loaded
ShouldDirtyTilesRequestedByObject,NAVIGATIONSYSTEM_API virtual bool ShouldDirtyTilesRequestedByObject(,Use ShouldDirtyTilesRequestedByElement with FNavigationElement instead.
ShouldInlineShaderCode,virtual bool ShouldInlineShaderCode() const { return false; },ShouldInlineShaderCode is no longer used when packaging shader maps. If you rely on this for some reason please reach out to the UE rendering team.
ShouldInlineShaderCode,ENGINE_API virtual bool ShouldInlineShaderCode() const override { return false; },ShouldInlineShaderCode is no longer used when packaging shader maps. If you rely on this for some reason please reach out to the UE rendering team.
ShouldProxyUseVertexColorVisualization,extern bool ShouldProxyUseVertexColorVisualization(FName OwnerName);,We no longer use names to enable visualization.
ShouldRegenerateGuids,bool ShouldRegenerateGuids() const,LOAD_RegenerateBulkDataGuids is now obsolete so this method no longer has any purpose.
Simplicials,TManagedArray<TUniquePtr<FCollisionStructureManager::FSimplicial>> Simplicials;,Simplicials array is optional and should be queried using the FindAttribute method
SizeZ,int32 SizeZ;,Use NumSlicesWithDepth or GetRHIStyleSizeZ instead
SlotGroupInertializationRequestMap,"TMap<FName, UE::Anim::FSlotInertializationRequest> SlotGroupInertializationRequestMap;",This property is deprecated. Please use SlotGroupInertializationRequestDataMap instead
SlotGroupInertializationRequestMap,"TMap<FName, UE::Anim::FSlotInertializationRequest> SlotGroupInertializationRequestMap;",This property is deprecated. Please use SlotGroupInertializationRequestDataMap instead
so,"// True if the cache key for this job should be based on preprocessed source. If so,",bCachePreprocessed member no longer used; preprocessed job cache is now the only path for in-memory caching of shader jobs
SourceControlProjectDirDelegate,FSourceControlProjectDirDelegate SourceControlProjectDirDelegate;,Use CustomProjectsDelegate instead.
SourceObject,TWeakObjectPtr<UObject> SourceObject;,Use SourceElement instead.
SplitTime,"inline void SplitTime(const double Time, UE::Insights::FTimeSplit& OutTimeSplit) { UE::Insights::SplitTime(Time, OutTimeSplit); }",TimeUtils namespace was merged into UE::Insights namespace
StopSourcesUsingBuffer,ENGINE_API void StopSourcesUsingBuffer(FSoundBuffer * SoundBuffer);,"No longer needed for resource managment, existing calls may be deleted"
StopSourcesUsingBuffer,ENGINE_API void StopSourcesUsingBuffer(FSoundBuffer* Buffer);,This is no longer used.  Existing calls may be deleted
StoreStreamingContentToExternalStreamingObject,URuntimeHashExternalStreamingObjectBase* StoreStreamingContentToExternalStreamingObject(FName InStreamingObjectName) { return StoreStreamingContentToExternalStreamingObject(); },"StoreStreamingContentToExternalStreamingObject(FName) is deprecated, use StoreStreamingContentToExternalStreamingObject() instead"
StripQualtiyLevelForCooking,void StripQualtiyLevelForCooking(const TCHAR* InPlatformName = nullptr),Use StripQualityLevelForCooking
StrLen,"static ENGINE_API void StrLen(const UFont* InFont, FAnsiStringView InText, float& XL, float& YL, bool bDPIAware, FCanvas* InCanvas);",Passing an ANSI string to StrLen has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
StrLen,"static ENGINE_API void StrLen(const UFont* InFont, FAnsiStringView InText, double& XL, double& YL, bool bDPIAware, FCanvas* InCanvas);",Passing an ANSI string to StrLen has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
StrLen,"ENGINE_API void StrLen(const UFont* InFont, FAnsiStringView InText, float& XL, float& YL, bool bDPIAware = false);",Passing an ANSI string to StrLen has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
StrLen,"ENGINE_API void StrLen(const UFont* InFont, FAnsiStringView InText, double& XL, double& YL, bool bDPIAware = false);",Passing an ANSI string to StrLen has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
SubscribeToPostProcessingPass,"virtual void SubscribeToPostProcessingPass(EPostProcessingPass Pass, FAfterPassCallbackDelegateArray& InOutPassCallbacks, bool bIsPassEnabled) {}",SubscribeToPostProcessingPass now takes a SceneView
TestEqualInsensitive,"bool TestEqualInsensitive(const TCHAR* What, const TCHAR* Actual, const TCHAR* Expected)",Use TestEqual instead (string tests are case insensitive by default)
TestEqualInsensitive,"CORE_API bool TestEqualInsensitive(const TCHAR* What, const TCHAR* Actual, const TCHAR* Expected);",Use TestEqual instead (string tests are case insensitive by default)
TestEqualInsensitive,"CORE_API bool TestEqualInsensitive(const TCHAR* What, FStringView Actual, FStringView Expected);",Use TestEqual instead (string tests are case insensitive by default)
TestEqualInsensitive,"CORE_API bool TestEqualInsensitive(const TCHAR* What, FUtf8StringView Actual, FUtf8StringView Expected);",Use TestEqual instead (string tests are case insensitive by default)
TestNotEqualInsensitive,"CORE_API bool TestNotEqualInsensitive(const TCHAR* What, const TCHAR* Actual, const TCHAR* Expected);",Use TestNotEqual instead (string tests are case insensitive by default)
TestNotEqualInsensitive,"CORE_API bool TestNotEqualInsensitive(const TCHAR* What, FStringView Actual, FStringView Expected);",Use TestNotEqual instead (string tests are case insensitive by default)
TestNotEqualInsensitive,"CORE_API bool TestNotEqualInsensitive(const TCHAR* What, FUtf8StringView Actual, FUtf8StringView Expected);",Use TestNotEqual instead (string tests are case insensitive by default)
TextSize,"ENGINE_API void TextSize( const UFont* InFont, FAnsiStringView InText, float& XL, float& YL, float ScaleX=1.f, float ScaleY=1.f);",Passing an ANSI string to TextSize has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
TextSize,"ENGINE_API void TextSize( const UFont* InFont, FAnsiStringView InText, double& XL, double& YL, double ScaleX=1.f, double ScaleY=1.f);",Passing an ANSI string to TextSize has been deprecated outside of UTF-8 mode. Please use the overload that takes a TCHAR string.
ThisThreadAtomicallyClearedFlag_ForGC,FORCEINLINE bool ThisThreadAtomicallyClearedFlag_ForGC(EInternalObjectFlags FlagToClear),ThisThreadAtomicallyClearedFlag_ForGC() can only be used by the garbage collector. Use ThisThreadAtomicallyClearedFlag instead.
ThisThreadAtomicallyClearedRFUnreachable,FORCEINLINE bool ThisThreadAtomicallyClearedRFUnreachable(),ThisThreadAtomicallyClearedRFUnreachable() can only be used by the garbage collector.
ThisThreadAtomicallyClearedRFUnreachable,bool ThisThreadAtomicallyClearedRFUnreachable();,ThisThreadAtomicallyClearedRFUnreachable() should no longer be used. Reachability flags can only be modified by the garbage collector.
ThisThreadAtomicallySetFlag_ForGC,FORCEINLINE bool ThisThreadAtomicallySetFlag_ForGC(EInternalObjectFlags FlagToSet),ThisThreadAtomicallySetFlag_ForGC() can only be used by the garbage collector. Use ThisThreadAtomicallySetFlag instead.
TilesInMinDistance,TArray<FNavMeshDirtyTileElement> TilesInMinDistance;,"TilesInMinDistance not used anymore, use TilesInMinDistanceMap instead."
TimingViewExtenderFeatureName,extern TRACEINSIGHTS_API const FName TimingViewExtenderFeatureName;,TimingViewExtenderFeatureName was moved inside UE::Insights::Timing namespace
TimingViewExtenderFeatureName,extern TRACEINSIGHTS_API const FName TimingViewExtenderFeatureName;,TimingViewExtenderFeatureName was moved inside UE::Insights::Timing namespace
TMovieSceneChannelData,"TMovieSceneChannelData(TArray<FFrameNumber>* InTimes, TArray<ValueType>* InValues, FKeyHandleLookupTable* InKeyHandles, FMovieSceneChannel* InChannel = nullptr)",Constructor that takes an optional FMovieSceneChannel is now deprecated. FMovieSceneChannel is now required.
ToSubSectionParameters,MOVIESCENE_API FMovieSceneSectionParameters ToSubSectionParameters() const;,This function is no longer supported
TracePackageStat,"CORE_API void TracePackageStat(uint64 InId, uint64 Duration, EPackageEventStatType StatType);","TracePackageStat is deprecated, please use TracePackageStatBeginScope and TracePackageStatEndScope instead."
TracePackageStat,"CORE_API void TracePackageStat(uint64 InId, uint64 Duration, EPackageEventStatType StatType);","TracePackageStat is deprecated, please use TracePackageStatBeginScope and TracePackageStatEndScope instead."
TrackResource,"ENGINE_API void TrackResource(USoundWave* SoundWave, FSoundBuffer* Buffer);",This is no longer used.  Existing calls may be deleted
transform,/** Get the target transform (asserts if not in Position mode) */,This method is Deprecated and it will be removed in a future release. Use GetTransform instead
TransformFrame,"void TransformFrame(FFrameNumber InFrame, FFrameNumber& OutFrame, uint32& OutWarpIndex) const;",Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
TransformRangeConstrained,MOVIESCENE_API TRange<FFrameTime> TransformRangeConstrained(const TRange<FFrameTime>& Range) const;,Please use ComputeTraversedHull or TransformTime
TransformRangeConstrained,MOVIESCENE_API TRange<FFrameNumber> TransformRangeConstrained(const TRange<FFrameNumber>& Range) const;,Please use ComputeTraversedHull or TransformTime
TransformRangeConstrained,TRange<FFrameTime> TransformRangeConstrained(const TRange<FFrameTime>& Range) const;,Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
TransformRangePure,MOVIESCENE_API TRange<FFrameTime> TransformRangePure(const TRange<FFrameTime>& Range) const;,Please use ComputeTraversedHull or TransformTime
TransformRangePure,MOVIESCENE_API TRange<FFrameNumber> TransformRangePure(const TRange<FFrameNumber>& Range) const;,Please use ComputeTraversedHull or TransformTime
TransformRangePure,TRange<FFrameTime> TransformRangePure(const TRange<FFrameTime>& Range) const;,Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
TransformRangeUnwarped,MOVIESCENE_API TRange<FFrameTime> TransformRangeUnwarped(const TRange<FFrameTime>& Range) const;,Please use ComputeTraversedHull or TransformTime
TransformRangeUnwarped,MOVIESCENE_API TRange<FFrameNumber> TransformRangeUnwarped(const TRange<FFrameNumber>& Range) const;,Please use ComputeTraversedHull or TransformTime
TransformRangeUnwarped,TRange<FFrameTime> TransformRangeUnwarped(const TRange<FFrameTime>& Range) const;,Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
TransformTime,"MOVIESCENE_API void TransformTime(FFrameTime InTime, FFrameTime& OutTime, FMovieSceneWarpCounter& OutWarpCounter) const;",Please upgrade your code to use TransformTime that takes breadcrumbs
TransformTime,"void TransformTime(FFrameTime InTime, FFrameTime& OutTime, uint32& OutWarpIndex) const;",Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
TransformTimeSpecific,"void TransformTimeSpecific(FFrameTime InTime, uint32 WarpCount, FFrameTime& OutTime) const;",Please update your code to the new FMovieSceneSequenceTransform API. The closest analogue is FMovieSceneTimeWarpLoop.
Trigger,"virtual void Trigger(IMovieScenePlayer* Player, const UE::MovieScene::FEvaluationHookParams& Params) const {}",Please implement the version that takes a SharedPlaybackState
UDatasmithClothAssetFactory,UDatasmithClothAssetFactory() = default;,The experimental Cloth importer is no longer supported.
UDatasmithClothComponentFactory,UDatasmithClothComponentFactory() = default;,The experimental Cloth importer is no longer supported.
UFUNCTION,"UFUNCTION(BlueprintCallable, Category=""Tool Menus"", meta=(DeprecatedFunction, DeprecationMessage = ""GetSelectedObjects has been deprecated.  We no longer automatically load assets on right click.  If you can work without loading the assets, please use SelectedAssets.  Otherwise call LoadSelectedObjects""))",GetSelectedObjects has been deprecated.  We no longer automatically load assets on right click.  Please use SelectedAssets and determine whatever you need for your context menu options without actually loading the assets.  When you finally need all or a subset of the selected assets use LoadSelectedAssets or LoadSelectedAssetsIf
UFUNCTION,"UFUNCTION(BlueprintCallable, Category=""Components|SkinnedMesh"", meta = (DeprecatedFunction, DeprecationMessage = ""Use USkinnedMeshComponent::OverrideMinLOD() instead.""))",Use USkinnedMeshComponent::OverrideMinLOD() instead.
UFUNCTION,"UFUNCTION(BlueprintCallable, Category = ""Cluster Union"", meta = (DeprecatedFunction, DeprecationMessage = ""SetIsAnchored is deprecated, Use SetSimulatePhysics instead""))","SetIsAnchored is deprecated, Use SetSimulatePhysics instead"
UFUNCTION,"UFUNCTION(BlueprintCallable, Category = ""ChaosPhysics"", meta = (DeprecatedFunction, DeprecationMessage = ""Use SetCustomInstanceDataByIndex() instead""))",Use SetCustomInstanceDataByIndex() instead
UFUNCTION,"UFUNCTION(BlueprintCallable, Category = ""Physics"", meta = (DeprecatedFunction, DeprecationMessage = ""Please use ForceBrokenForCustomRenderer() instead""))",Please use ForceBrokenForCustomRenderer() instead
Uncompress,"virtual bool Uncompress(void* UncompressedBuffer, int32& UncompressedSize, const void* CompressedBuffer, int32 CompressedSize, int32 CompressionData) {return false;};",Switch to 64 bit version for memory sizes
UnderflowClamp,static FORCEINLINE float UnderflowClamp(const float InValue),Audio code relies on denormals flush to zero floating point mode from now on. Please use FScopedFTZFloatMode instead of this API
UnloadBoundObject,"MOVIESCENE_API void UnloadBoundObject(const UE::UniversalObjectLocator::FResolveParams& ResolveParams, const FGuid& ObjectId, int32 BindingIndex) {}",UnloadBoundObject no longer supported
UnloadBoundObject,"MOVIESCENE_API void UnloadBoundObject(const UE::UniversalObjectLocator::FResolveParams& ResolveParams, const FGuid& ObjectId, int32 BindingIndex) {}",UnloadBoundObject no longer supported
UnregisterInputConnection,"void UnregisterInputConnection(const void* Reference, const FName& PropertyName)",PropertyName is no longer needed to unregister connections
UnregisterNavOctreeElement,"NAVIGATIONSYSTEM_API bool UnregisterNavOctreeElement(UObject& ElementOwner, INavRelevantInterface& ElementInterface, int32 UpdateFlags);",Use the overloaded version with FNavigationElement instead.
UnregisterNavOctreeElement,"NAVIGATIONSYSTEM_API void UnregisterNavOctreeElement(UObject* ElementOwner, INavRelevantInterface* ElementInterface, int32 UpdateFlags);",Use the version taking FNavigationElement as parameter instead.
UnregisterSourceControlProjectDirDelegate,virtual void UnregisterSourceControlProjectDirDelegate() override;,Use UnregisterCustomProjectsDelegate instead.
UnregisterSourceControlProjectDirDelegate,virtual void UnregisterSourceControlProjectDirDelegate() = 0;,Use UnregisterCustomProjectsDelegate instead.
UnwarpedPlayRange,FMovieSceneFrameRange UnwarpedPlayRange;,This field is no longer used
Update,"virtual void Update(IMovieScenePlayer* Player, const UE::MovieScene::FEvaluationHookParams& Params) const {}",Please implement the version that takes a SharedPlaybackState
UpdateActorAndComponentsInNavOctree,NAVIGATIONSYSTEM_API void UpdateActorAndComponentsInNavOctree(AActor& Actor);,This method will be removed. Use UNavigationSystemV1 version instead.
UpdateAssetViewerProfileList,void UpdateAssetViewerProfileList(),Unused
UpdateAssetViewerProfileSelection,void UpdateAssetViewerProfileSelection(),Unused
UpdateEntities,"MOVIESCENE_API void UpdateEntities(UMovieSceneEntitySystemLinker* Linker, const FEntityImportSequenceParams& ImportParams, const FMovieSceneEntityComponentField* EntityField, const FMovieSceneEvaluationFieldEntitySet& NewEntities);",Please call the version that takes OutPerTickConditionalEntities and ConditionResultCache
UpdateNavOctreeElement,"NAVIGATIONSYSTEM_API void UpdateNavOctreeElement(UObject& ElementOwner, INavRelevantInterface& ElementInterface, int32 UpdateFlags);",Use the overloaded version with FNavigationElement instead.
UpdateNavOctreeElement,"void UpdateNavOctreeElement(UObject* ElementOwner, INavRelevantInterface* ElementInterface, int32 UpdateFlags);",Use the version taking FNavigationElement instead.
UpdateNavOctreeElementBounds,"NAVIGATIONSYSTEM_API bool UpdateNavOctreeElementBounds(UObject& Object, const FBox& NewBounds, const TConstArrayView<FBox> DirtyAreas);",Use the overloaded version with FNavigationElement instead.
UpdateNavOctreeElementBounds,"NAVIGATIONSYSTEM_API bool UpdateNavOctreeElementBounds(UObject& Object, const FBox& NewBounds, TConstArrayView<FBox> DirtyAreas);",Use the version taking FNavigationElement instead.
UpdateNavOctreeParentChain,"NAVIGATIONSYSTEM_API void UpdateNavOctreeParentChain(UObject& ElementOwner, bool bSkipElementOwnerUpdate = false);",This method is no longer public and should not be called directly.
UpdateNavOctreeParentChain,"NAVIGATIONSYSTEM_API void UpdateNavOctreeParentChain(UObject* ElementOwner, bool bSkipElementOwnerUpdate = false);",This method will no longer be public and should not be called directly.
UpdateOneShotEntities,"MOVIESCENE_API void UpdateOneShotEntities(UMovieSceneEntitySystemLinker* Linker, const FEntityImportSequenceParams& ImportParams, const FMovieSceneEntityComponentField* EntityField, const FMovieSceneEvaluationFieldEntitySet& NewEntities);",Please call the version that takes ConditionResultCache
UpdateStreamingState,ENGINE_API virtual void UpdateStreamingState();,Implement IStreamingWorldSubsystemInterface instead.
UpdateSubsurfaceProfileTexture,"ENGINE_API void UpdateSubsurfaceProfileTexture(class FRDGBuilder& GraphBuilder, EShaderPlatform ShaderPlatform);","Please, use the name space SubsurfaceProfile::"
UsesAdditionalRHIParams,virtual bool UsesAdditionalRHIParams() const { return false; },Use ICustomSlateElement::Draw instead.
UsesCustomProjectDir,virtual bool UsesCustomProjectDir() const override;,Use !GetCustomProjects().IsEmpty() instead.
UsesCustomProjectDir,virtual bool UsesCustomProjectDir() const = 0;,Use !GetCustomProjects().IsEmpty() instead.
UsesThreadedHttp,static HTTP_API bool UsesThreadedHttp();,UsesThreadedHttp is deprecated and will be removed
ValidateAndAppendGeometry,"NAVIGATIONSYSTEM_API void ValidateAndAppendGeometry(const TSharedRef<FNavigationRelevantData, ESPMode::ThreadSafe>& ElementData, const FCompositeNavModifier& InModifier);",Use the version taking a const reference on FNavigationRelevantData.
ValidateResult,bool ValidateResult(TArrayView<const FIndex2i> Edges) const,No longer used by the implementation and may be removed
ValueForDebugging,inline uint64 ValueForDebugging() const,Use LexToString()
VerifyEDLCookInfo,"COREUOBJECT_API void VerifyEDLCookInfo(const FEDLMessageCallback& MessageCallback, bool bFullReferencesExpected = true);",Use version that takes FEDLLogRecordCallback
WaitForRHIThreadTasks,inline void WaitForRHIThreadTasks(),FRHICommandListExecutor::WaitForRHIThreadTasks() is deprecated. Call FRHICommandListImmediate::ImmediateFlush(EImmediateFlushType::FlushRHIThread) instead.
WarpCounts,TArray<uint32> WarpCounts;,Warp counts are no longer supported.
Warping,FMovieSceneTimeWarping Warping;,Warping is now implemented as a variant within TimeScale
WaveBufferMap,"TMap<int32, FSoundBuffer*>	WaveBufferMap;",This is no longer used and should not be accessed directly.
WhichSide,"int WhichSide(const TVector2<T>& QueryPoint, T Tolerance = 0)",Use GetSide instead.
WhichSide,"static int WhichSide(const TVector2<T>& StartPt, const TVector2<T>& EndPt, const TVector2<T>& QueryPt, T Tolerance = (T)0)",Use GetSide instead.
WindowRenderTargetUpdate,"void WindowRenderTargetUpdate(FSlateRenderer* Renderer, SWindow* Window) {}",WindowRenderTargetUpdate is no longer used
Wrap,"[[nodiscard]] static constexpr FORCEINLINE T Wrap(const T X, const T Min, const T Max)",Use of FMath::Wrap with non-floating point arguments is deprecated - consider FMath::WrapExclusive instead.
WriteHLODStatsCSV,"static ENGINE_API bool WriteHLODStatsCSV(UWorld* InWorld, const FString& InFilename) { return false; }",Use UWorldPartitionHLODEditorSubsystem::WriteHLODStatsCSV()
bActiveToolMadeSelectionStoreRequest,bool bActiveToolMadeSelectionStoreRequest = false;,bActiveToolMadeSelectionStoreRequest is no longer used.
bDisableDisregardForGC,bool bDisableDisregardForGC = false;,Use gc.MaxObjectsNotConsideredByGC=0 ini setting instead
HDRNeedsVendorExtensions,bool HDRNeedsVendorExtensions = false;,GRHIGlobals.HDRNeedsVendorExtensions has been deprecated - Vendor extensions are not used anymore
Enabled,bool Enabled = true;,GRHIGlobals.VariableRateShading.Enabled has been deprecated - please use GRHIGlobals.VariableRateShading.SupportsPipeline or GVRSImageManager.IsPipelineVRSEnabled() instead.
AttachmentEnabled,bool AttachmentEnabled = true;,GRHIGlobals.VariableRateShading.AttachmentEnabled has been deprecated - please use GRHIGlobals.VariableRateShading.SupportsAttachment or GVRSImageManager.IsAttachmentVRSEnabled() instead.
bAllowHitGroupIndexing,bool bAllowHitGroupIndexing = true;,Set bAllowHitGroupIndexing in FRayTracingShaderBindingTableInitializer.
bAllowHitGroupIndexing,bool bAllowHitGroupIndexing = true;,bAllowHitGroupIndexing is now stored in the ShaderBindingTable.
